<?xml version="1.0" encoding="UTF-8"?>
<application>
  <component name="GemManagerSettings">
    <myPrecious>
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems">
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/rack-1.2.1" name="rack" version="1.2.1" timestamp="1290716994000" parser_version="9" git="false">
          <additional_info authors="Christian Neukirchen" email="chneukirchen@gmail.com" homepage="http://rack.rubyforge.org">
            <summary>a modular Ruby webserver interface</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/erubis-2.6.6" name="erubis" version="2.6.6" timestamp="1290716997000" parser_version="9" git="false">
          <additional_info authors="makoto kuwata" email="kwa(at)kuwata-lab.com" homepage="http://www.kuwata-lab.com/erubis/">
            <summary>a fast and extensible eRuby implementation which supports multi-language</summary>
          </additional_info>
          <dependency name="abstract" version="1.0.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/activesupport-3.0.3" name="activesupport" version="3.0.3" timestamp="1290716993000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>A toolkit of support libraries and Ruby core extensions extracted from the Rails framework.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/activemodel-3.0.3" name="activemodel" version="3.0.3" timestamp="1290716994000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>A toolkit for building modeling frameworks (part of Rails).</summary>
          </additional_info>
          <dependency name="builder" version="2.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="i18n" version="0.4" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/builder-2.1.2" name="builder" version="2.1.2" timestamp="1290716993000" parser_version="9" git="false">
          <additional_info authors="Jim Weirich" email="jim@weirichhouse.org" homepage="http://onestepback.org">
            <summary>Builders for MarkUp.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/activerecord-3.0.3" name="activerecord" version="3.0.3" timestamp="1290716999000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Object-relational mapper framework (part of Rails).</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="arel" version="2.0.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="tzinfo" version="0.3.23" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activemodel" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/mail-2.2.10" name="mail" version="2.2.10" timestamp="1290717000000" parser_version="9" git="false">
          <additional_info authors="Mikel Lindsaar" email="raasdnil@gmail.com" homepage="http://github.com/mikel/mail">
            <summary>Mail provides a nice Ruby DSL for making, sending and reading emails.</summary>
          </additional_info>
          <dependency name="treetop" version="1.4.8" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="mime-types" version="1.16" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="2.3.6" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="i18n" version="0.4.1" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/arel-2.0.4" name="arel" version="2.0.4" timestamp="1290716998000" parser_version="9" git="false">
          <additional_info authors="Aaron Patterson, Bryan Halmkamp, Emilio Tagua, Nick Kallen" email="aaron@tenderlovemaking.com, bryan@brynary.com, miloops@gmail.com, nick@example.org" homepage="http://github.com/rails/arel">
            <summary>Arel is a Relational Algebra for Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/thor-0.14.6" name="thor" version="0.14.6" timestamp="1290717001000" parser_version="9" git="false">
          <additional_info authors="Yehuda Katz, JosÃ© Valim" email="ruby-thor@googlegroups.com" homepage="http://github.com/wycats/thor">
            <summary>A scripting framework that replaces rake, sake and rubigen</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/polyglot-0.3.1" name="polyglot" version="0.3.1" timestamp="1290716999000" parser_version="9" git="false">
          <additional_info authors="Clifford Heath" email="cjheath@rubyforge.org" homepage="http://polyglot.rubyforge.org">
            <summary>Allows custom language loaders for specified file extensions to be hooked into require</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/i18n-0.4.2" name="i18n" version="0.4.2" timestamp="1290716994000" parser_version="9" git="false">
          <additional_info authors="Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon Moore" email="rails-i18n@googlegroups.com" homepage="http://github.com/svenfuchs/i18n">
            <summary>New wave Internationalization support for Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/actionpack-3.0.3" name="actionpack" version="3.0.3" timestamp="1290716997000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Web-flow and rendering framework putting the VC in MVC (part of Rails).</summary>
          </additional_info>
          <dependency name="builder" version="2.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="erubis" version="2.6.6" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rack-mount" version="0.6.13" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rack-test" version="0.5.6" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="tzinfo" version="0.3.23" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="i18n" version="0.4" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activemodel" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rack" version="1.2.1" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/rack-test-0.5.6" name="rack-test" version="0.5.6" timestamp="1290716995000" parser_version="9" git="false">
          <additional_info authors="Bryan Helmkamp" email="bryan@brynary.com" homepage="http://github.com/brynary/rack-test">
            <summary>Simple testing API built on Rack</summary>
          </additional_info>
          <dependency name="rack" version="1.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/treetop-1.4.9" name="treetop" version="1.4.9" timestamp="1290717000000" parser_version="9" git="false">
          <additional_info authors="Nathan Sobo" email="nathansobo@gmail.com" homepage="http://functionalform.blogspot.com">
            <summary>A Ruby-based text parsing and interpretation DSL</summary>
          </additional_info>
          <dependency name="polyglot" version="0.3.1" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/rack-mount-0.6.13" name="rack-mount" version="0.6.13" timestamp="1290716995000" parser_version="9" git="false">
          <additional_info authors="Joshua Peek" email="josh@joshpeek.com" homepage="http://github.com/josh/rack-mount">
            <summary>Stackable dynamic tree based Rack router</summary>
          </additional_info>
          <dependency name="rack" version="1.0.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/mime-types-1.16" name="mime-types" version="1.16" timestamp="1290716999000" parser_version="9" git="false">
          <additional_info authors="Austin Ziegler" email="austin@rubyforge.org" homepage="http://mime-types.rubyforge.org/">
            <summary>Manages a MIME Content-Type database that will return the Content-Type for a given filename.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/rails-3.0.3" name="rails" version="3.0.3" timestamp="1290717003000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Full-stack web application framework.</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="activerecord" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="bundler" version="1.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="railties" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="activeresource" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="actionpack" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="actionmailer" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/abstract-1.0.0" name="abstract" version="1.0.0" timestamp="1290716996000" parser_version="9" git="false">
          <additional_info authors="makoto kuwata" email="N/A" homepage="http://rubyforge.org/projects/abstract">
            <summary>a library which enable you to define abstract method in Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/activeresource-3.0.3" name="activeresource" version="3.0.3" timestamp="1290716999000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>REST modeling framework (part of Rails).</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="activemodel" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/tzinfo-0.3.23" name="tzinfo" version="0.3.23" timestamp="1290716996000" parser_version="9" git="false">
          <additional_info authors="Philip Ross" email="phil.ross@gmail.com" homepage="http://tzinfo.rubyforge.org/">
            <summary>Daylight-savings aware timezone library</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/railties-3.0.3" name="railties" version="3.0.3" timestamp="1290717003000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Tools for creating, working with, and running Rails applications.</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rake" version="0.8.7" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="thor" version="0.14.4" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="actionpack" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/actionmailer-3.0.3" name="actionmailer" version="3.0.3" timestamp="1290717001000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Email composition, delivery, and receiving framework (part of Rails).</summary>
          </additional_info>
          <dependency name="actionpack" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="mail" version="2.2.9" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems/bundler-1.0.7" name="bundler" version="1.0.7" timestamp="1290717003000" parser_version="9" git="false">
          <additional_info authors="Carl Lerche, Yehuda Katz, AndrÃ© Arko" email="carlhuda@engineyard.com" homepage="http://gembundler.com">
            <summary>The best way to manage your application's dependencies</summary>
          </additional_info>
        </gem>
      </box>
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0/gems">
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0/gems/rake-0.8.7" name="rake" version="0.8.7" timestamp="1290716758000" parser_version="9" git="false">
          <additional_info authors="Jim Weirich" email="jim@weirichhouse.org" homepage="http://rake.rubyforge.org">
            <summary>Ruby based make-like utility.</summary>
          </additional_info>
        </gem>
      </box>
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/bundler/gems" />
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/bundler/gems" />
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/bundler/gems" />
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/bundler/gems" />
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@global/gems">
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@global/gems/rake-0.8.7" name="rake" version="0.8.7" timestamp="1290716766000" parser_version="9" git="false">
          <additional_info authors="Jim Weirich" email="jim@weirichhouse.org" homepage="http://rake.rubyforge.org">
            <summary>Ruby based make-like utility.</summary>
          </additional_info>
        </gem>
      </box>
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0/bundler/gems" />
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems">
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/sqlite3-ruby-1.3.2" name="sqlite3-ruby" version="1.3.2" timestamp="1292707902000" parser_version="9" git="false">
          <additional_info authors="Jamis Buck, Luis Lavena, Aaron Patterson" email="jamis@37signals.com, luislavena@gmail.com, aaron@tenderlovemaking.com" homepage="http://github.com/luislavena/sqlite3-ruby">
            <summary>This module allows Ruby programs to interface with the SQLite3 database engine (http://www.sqlite.org)</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/childprocess-0.1.4" name="childprocess" version="0.1.4" timestamp="1292707843000" parser_version="9" git="false">
          <additional_info authors="Jari Bakken" email="jari.bakken@gmail.com" homepage="http://github.com/jarib/childprocess">
            <summary>Cross-platform ruby library for managing child processes.</summary>
          </additional_info>
          <dependency name="ffi" version="0.6.3" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/json_pure-1.4.6" name="json_pure" version="1.4.6" timestamp="1292707844000" parser_version="9" git="false">
          <additional_info authors="Florian Frank" email="flori@ping.de" homepage="http://flori.github.com/json">
            <summary>JSON Implementation for Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rack-test-0.5.6" name="rack-test" version="0.5.6" timestamp="1292707625000" parser_version="9" git="false">
          <additional_info authors="Bryan Helmkamp" email="bryan@brynary.com" homepage="http://github.com/brynary/rack-test">
            <summary>Simple testing API built on Rack</summary>
          </additional_info>
          <dependency name="rack" version="1.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/RedCloth-4.2.3" name="RedCloth" version="4.2.3" timestamp="1292711715000" parser_version="9" git="false">
          <additional_info authors="Jason Garber" email="redcloth-upwards@rubyforge.org" homepage="http://redcloth.org">
            <summary>RedCloth-4.2.3 - Textile parser for Ruby. http://redcloth.org/</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/i18n-0.5.0" name="i18n" version="0.5.0" timestamp="1292707624000" parser_version="9" git="false">
          <additional_info authors="Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon Moore" email="rails-i18n@googlegroups.com" homepage="http://github.com/svenfuchs/i18n">
            <summary>New wave Internationalization support for Ruby</summary>
          </additional_info>
          <readme xml:space="preserve"><![CDATA[h1. Ruby I18n

Ruby Internationalization and localization solution.

Features:

* translation and localization
* interpolation of values to translations (Ruby 1.9 compatible syntax)
* pluralization (CLDR compatible)
* customizable transliteration to ASCII
* flexible defaults
* bulk lookup
* lambdas as translation data
* custom key/scope separator
* custom exception handlers
* extensible architecture with a swappable backend

Pluggable features:

* Cache
* Pluralization: lambda pluralizers stored as translation data
* Locale fallbacks, RFC4647 compliant (optionally: RFC4646 locale validation)
* Gettext support
* Translation metadata

Alternative backends:

* Chain
* ActiveRecord (optionally: ActiveRecord::Missing and ActiveRecord::StoreProcs)
* KeyValue (uses active_support/json and cannot store procs)

For more information and lots of resources see: "http://ruby-i18n.org/wiki":http://ruby-i18n.org/wiki

h2. Installation

gem install i18n

h4. Rails version warning

On Rails < 2.3.6 the method I18n.localize will fail with MissingInterpolationArgument (issue "20":http://github.com/svenfuchs/i18n/issues/issue/20). Upgrade to Rails 2.3.6 or higher (2.3.8 preferably) is recommended.

h3. Installation on Rails < 2.3.5 (deprecated)

Up to version 2.3.4 Rails will not accept i18n gems > 0.1.3. There is an unpacked
gem inside of active_support/lib/vendor which gets loaded unless gem 'i18n', '~> 0.1.3'.
This requirement is relaxed in "6da03653":http://github.com/rails/rails/commit/6da03653

The new i18n gem can be loaded from vendor/plugins like this:

<pre>
  def reload_i18n!
    raise "Move to i18n version 0.2.0 or greater" if Rails.version > "2.3.4"

    $:.grep(/i18n/).each { |path| $:.delete(path) }
    I18n::Backend.send :remove_const, "Simple"
    $: << Rails.root.join('vendor', 'plugins', 'i18n', 'lib').to_s
  end
</pre>

Then you can `reload_i18n!` inside an i18n initializer.

h2. Tests

You can run tests both with

* `rake test` or just `rake`
* run any test file directly, e.g. `ruby -Ilib -Itest test/api/simple_test.rb`
* run all tests with `ruby -Ilib -Itest test/all.rb`

You can run all tests against all Gemfiles with

* `ruby test/run_all.rb`

The structure of the test suite is a bit unusual as it uses modules to reuse
particular tests in different test cases.

The reason for this is that we need to enforce the I18n API across various
combinations of extensions. E.g. the Simple backend alone needs to support
the same API as any combination of feature and/or optimization modules included
to the Simple backend. We test this by reusing the same API defition (implemented
as test methods) in test cases with different setups.

You can find the test cases that enforce the API in test/api. And you can find
the API definition test methods in test/api/tests.

All other test cases (e.g. as defined in test/backend, test/core\_ext) etc.
follow the usual test setup and should be easy to grok.

h2. Authors

* "Sven Fuchs":http://www.artweb-design.de
* "Joshua Harvey":http://www.workingwithrails.com/person/759-joshua-harvey
* "Stephan Soller":http://www.arkanis-development.de
* "Saimon Moore":http://saimonmoore.net
* "Matt Aimonetti":http://railsontherun.com

h2. Contributors

http://github.com/svenfuchs/i18n/contributors

h2. License

MIT License. See the included MIT-LICENSE file.
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/warden-1.0.3" name="warden" version="1.0.3" timestamp="1292707888000" parser_version="9" git="false">
          <additional_info authors="Daniel Neighman" email="has.sox@gmail.com" homepage="http://github.com/hassox/warden">
            <summary>Rack middleware that provides authentication for rack applications</summary>
          </additional_info>
          <dependency name="rack" version="1.0.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/fastercsv-1.5.3" name="fastercsv" version="1.5.3" timestamp="1293397625000" parser_version="9" git="false">
          <additional_info authors="James Edward Gray II" email="james@grayproductions.net" homepage="http://fastercsv.rubyforge.org">
            <summary>FasterCSV is CSV, but faster, smaller, and cleaner.</summary>
          </additional_info>
          <readme xml:space="preserve"><![CDATA[= Read Me

by James Edward Gray II

== Description

Welcome to FasterCSV.

FasterCSV is intended as a replacement to Ruby's standard CSV library.  It was designed to address concerns users of that library had and it has three primary goals:

1.  Be significantly faster than CSV while remaining a pure Ruby library.
2.  Use a smaller and easier to maintain code base.  (FasterCSV is larger now, 
    but considerably richer in features.  The parsing core remains quite small.)
3.  Improve on the CSV interface.

Obviously, the last one is subjective.  If you love CSV's interface, odds are
good this one won't suit you.  I did try to defer to that interface whenever I
didn't have a compelling reason to change it though, so hopefully this won't be
too radically different.

== What's Different From CSV?

I'm sure I'll miss something, but I'll try to mention most of the major differences I am aware of, to help others quickly get up to speed:

=== CSV Parsing

* FasterCSV has a stricter parser and will throw MalformedCSVErrors on
  problematic data.
* FasterCSV has a less liberal idea of a line ending than CSV.  What you set as
  the <tt>:row_sep</tt> is law.
* CSV returns empty lines as <tt>[nil]</tt>.  FasterCSV calls them <tt>[]</tt>.
* FasterCSV has a much faster parser.

=== Interface

* FasterCSV uses Hash-style parameters to set options.
* FasterCSV does not have generate_row() or parse_row() from CSV.
* FasterCSV does not have CSV's Reader and Writer classes.
* FasterCSV::open() is more like Ruby's open() than CSV::open().
* FasterCSV objects support most standard IO methods.
* FasterCSV has a new() method used to wrap objects like String and IO for
  reading and writing.
* FasterCSV::generate() is different from CSV::generate().
* FasterCSV does not support partial reads.  It works line-by-line.
* FasterCSV does not allow the instance methods to override the separators for
  performance reasons.  They must be set in the constructor.

If you use this library and find yourself missing any functionality I have trimmed, please {let me know}[mailto:james@grayproductions.net].

== Documentation

See FasterCSV for documentation.

== Installing

See the INSTALL file for instructions.

== What is CSV, really?

FasterCSV maintains a pretty strict definition of CSV taken directly from {the RFC}[http://www.ietf.org/rfc/rfc4180.txt].  I relax the rules in only one place and that is to make using this library easier.  FasterCSV will parse all valid CSV.

What you don't want to do is feed FasterCSV invalid CSV.  Because of the way the CSV format works, it's common for a parser to need to read until the end of the file to be sure a field is invalid.  This eats a lot of time and memory.

Luckily, when working with invalid CSV, Ruby's built-in methods will almost always be superior in every way.  For example, parsing non-quoted fields is as easy as:

  data.split(",")

== Questions and/or Comments

Feel free to email {James Edward Gray II}[mailto:james@grayproductions.net] with
any questions.
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/activerecord-3.0.3" name="activerecord" version="3.0.3" timestamp="1292707629000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Object-relational mapper framework (part of Rails).</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="arel" version="2.0.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="tzinfo" version="0.3.23" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activemodel" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[= Active Record -- Object-relational mapping put on rails

Active Record connects classes to relational database tables to establish an
almost zero-configuration persistence layer for applications. The library
provides a base class that, when subclassed, sets up a mapping between the new
class and an existing table in the database. In context of an application,
these classes are commonly referred to as *models*. Models can also be
connected to other models; this is done by defining *associations*.

Active Record relies heavily on naming in that it uses class and association
names to establish mappings between respective database tables and foreign key
columns. Although these mappings can be defined explicitly, it's recommended
to follow naming conventions, especially when getting started with the
library.

A short rundown of some of the major features:

* Automated mapping between classes and tables, attributes and columns.

   class Product < ActiveRecord::Base
   end

   The Product class is automatically mapped to the table named "products",
   which might look like this:

   CREATE TABLE products (
     id int(11) NOT NULL auto_increment,
     name varchar(255),
     PRIMARY KEY  (id)
   );

   This would also define the following accessors: `Product#name` and
   `Product#name=(new_name)`

  {Learn more}[link:classes/ActiveRecord/Base.html]


* Associations between objects defined by simple class methods.

   class Firm < ActiveRecord::Base
     has_many   :clients
     has_one    :account
     belongs_to :conglomerate
   end

  {Learn more}[link:classes/ActiveRecord/Associations/ClassMethods.html]


* Aggregations of value objects.

   class Account < ActiveRecord::Base
     composed_of :balance, :class_name => "Money",
                 :mapping => %w(balance amount)
     composed_of :address,
                 :mapping => [%w(address_street street), %w(address_city city)]
   end

  {Learn more}[link:classes/ActiveRecord/Aggregations/ClassMethods.html]


* Validation rules that can differ for new or existing objects.

    class Account < ActiveRecord::Base
      validates_presence_of     :subdomain, :name, :email_address, :password
      validates_uniqueness_of   :subdomain
      validates_acceptance_of   :terms_of_service, :on => :create
      validates_confirmation_of :password, :email_address, :on => :create
    end

  {Learn more}[link:classes/ActiveRecord/Validations.html]


* Callbacks available for the entire life cycle (instantiation, saving, destroying, validating, etc.)

   class Person < ActiveRecord::Base
     before_destroy :invalidate_payment_plan
     # the `invalidate_payment_plan` method gets called just before Person#destroy
   end

  {Learn more}[link:classes/ActiveRecord/Callbacks.html]


* Observers that react to changes in a model

   class CommentObserver < ActiveRecord::Observer
     def after_create(comment) # is called just after Comment#save
       Notifications.deliver_new_comment("david@loudthinking.com", comment)
     end
   end

  {Learn more}[link:classes/ActiveRecord/Observer.html]


* Inheritance hierarchies

   class Company < ActiveRecord::Base; end
   class Firm < Company; end
   class Client < Company; end
   class PriorityClient < Client; end

  {Learn more}[link:classes/ActiveRecord/Base.html]


* Transactions

    # Database transaction
    Account.transaction do
      david.withdrawal(100)
      mary.deposit(100)
    end

  {Learn more}[link:classes/ActiveRecord/Transactions/ClassMethods.html]


* Reflections on columns, associations, and aggregations

    reflection = Firm.reflect_on_association(:clients)
    reflection.klass # => Client (class)
    Firm.columns # Returns an array of column descriptors for the firms table

  {Learn more}[link:classes/ActiveRecord/Reflection/ClassMethods.html]


* Database abstraction through simple adapters

    # connect to SQLite3
    ActiveRecord::Base.establish_connection(:adapter => "sqlite3", :database => "dbfile.sqlite3")

    # connect to MySQL with authentication
    ActiveRecord::Base.establish_connection(
      :adapter  => "mysql",
      :host     => "localhost",
      :username => "me",
      :password => "secret",
      :database => "activerecord"
    )

  {Learn more}[link:classes/ActiveRecord/Base.html] and read about the built-in support for
  MySQL[link:classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html],
  PostgreSQL[link:classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html], and
  SQLite3[link:classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html].


* Logging support for Log4r[http://log4r.sourceforge.net] and Logger[http://www.ruby-doc.org/stdlib/libdoc/logger/rdoc]

    ActiveRecord::Base.logger = Logger.new(STDOUT)
    ActiveRecord::Base.logger = Log4r::Logger.new("Application Log")


* Database agnostic schema management with Migrations

    class AddSystemSettings < ActiveRecord::Migration
      def self.up
        create_table :system_settings do |t|
          t.string  :name
          t.string  :label
          t.text    :value
          t.string  :type
          t.integer :position
        end

        SystemSetting.create :name => "notice", :label => "Use notice?", :value => 1
      end

      def self.down
        drop_table :system_settings
      end
    end

  {Learn more}[link:classes/ActiveRecord/Migration.html]


== Philosophy

Active Record is an implementation of the object-relational mapping (ORM)
pattern[http://www.martinfowler.com/eaaCatalog/activeRecord.html] by the same
name described by Martin Fowler:

  "An object that wraps a row in a database table or view,
  encapsulates the database access, and adds domain logic on that data."

Active Record attempts to provide a coherent wrapper as a solution for the inconvenience that is
object-relational mapping. The prime directive for this mapping has been to minimize
the amount of code needed to build a real-world domain model. This is made possible
by relying on a number of conventions that make it easy for Active Record to infer
complex relations and structures from a minimal amount of explicit direction.

Convention over Configuration:
* No XML-files!
* Lots of reflection and run-time extension
* Magic is not inherently a bad word

Admit the Database:
* Lets you drop down to SQL for odd cases and performance
* Doesn't attempt to duplicate or replace data definitions


== Download and installation

The latest version of Active Record can be installed with Rubygems:

  % [sudo] gem install activerecord

Source code can be downloaded as part of the Rails project on GitHub

* http://github.com/rails/rails/tree/master/activerecord/


== License

Active Record is released under the MIT license.


== Support

API documentation is at

* http://api.rubyonrails.com

Bug reports and feature requests can be filed with the rest for the Ruby on Rails project here:

* https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/diff-lcs-1.1.2" name="diff-lcs" version="1.1.2" timestamp="1292707846000" parser_version="9" git="false">
          <additional_info authors="N/A" email="diff-lcs@halostatue.ca" homepage="http://rubyforge.org/projects/ruwiki/">
            <summary>Provides a list of changes that represent the difference between two sequenced collections.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/mail-2.2.12" name="mail" version="2.2.12" timestamp="1292707631000" parser_version="9" git="false">
          <additional_info authors="Mikel Lindsaar" email="raasdnil@gmail.com" homepage="http://github.com/mikel/mail">
            <summary>Mail provides a nice Ruby DSL for making, sending and reading emails.</summary>
          </additional_info>
          <dependency name="treetop" version="1.4.8" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="mime-types" version="1.16" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="2.3.6" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="i18n" version="0.4.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[= Mail

== Introduction

Mail is an internet library for Ruby that is designed to handle emails
generation, parsing and sending in a simple, rubyesque manner.

The purpose of this library is to provide a single point of access to handle
all email functions, including sending and receiving emails.  All network
type actions are done through proxy methods to Net::SMTP, Net::POP3 etc.

Built from my experience with TMail, it is designed to be a pure ruby
implementation that makes generating, sending and parsing emails a no
brainer.

It is also designed form the ground up to work with Ruby 1.9.  This is because
Ruby 1.9 handles text encodings much more magically than Ruby 1.8.x and so
these features have been taken full advantage of in this library allowing
Mail to handle a lot more messages more cleanly than TMail.  Mail does run on
Ruby 1.8.x... it's just not as fun to code.

Finally, Mail has been designed with a very simple object oriented system
that really opens up the email messages you are parsing, if you know what
you are doing, you can fiddle with every last bit of your email directly.

== Compatibility

Mail is tested and works on the following platforms:

* jruby-1.4.0 [ [x86_64-java] ]
* ree-1.8.7-2010.01 [ x86_64 ]
* ruby-1.8.6-p399 [ x86_64 ]
* ruby-1.8.7-p249 [ x86_64 ]
* ruby-1.9.1-head [ x86_64 ] (10 April 2010)
* ruby-1.9.2-head [ x86_64 ] (10 April 2010)

Mail seems to work fine on JRuby as well, however there is some weird QP
problem that only shows up while running the specs, running it directly
works fine.... weird.  Any jRuby gurus who want to help out, please do.

== Discussion

If you want to discuss mail with like minded individuals, please subscribe to
the Google Group http://groups.google.com/group/mail-ruby

== Current Capabilities of Mail

* RFC2822 Support, Reading and Writing
* RFC2045-2049 Support for multipart emails
* Support for creating multipart alternate emails
* Support for reading multipart/report emails & getting details from such
* Support for multibyte emails - needs quite a lot of work and testing
* Wrappers for File, Net/POP3, Net/SMTP
* Auto encoding of non US-ASCII header fields
* Auto encoding of non US-ASCII bodies

Mail is RFC2822 compliant now, that is, it can parse and generate valid US-ASCII
emails.  There are a few obsoleted syntax emails that it will have problems with, but
it also is quite robust, meaning, if it finds something it doesn't understand it will
not crash, instead, it will skip the problem and keep parsing.  In the case of a header
it doesn't understand, it will initialise the header as an optional unstructured
field and continue parsing.

This means Mail won't (ever) crunch your data (I think).

You can also create MIME emails.  There are helper methods for making a 
multipart/alternate email for text/plain and text/html (the most common pair)
and you can manually create any other type of MIME email.

== Roadmap

Next TODO:

* Improve MIME support for character sets in headers, currently works, mostly, needs
  refinement.
* Add IMAP wrapper

== Testing Policy

Basically... we do BDD on Mail.  No method gets written in Mail without a
corresponding or covering spec.  We expect as a minimum 100% coverage
measured by RCov.  While this is not perfect by any measure, it is pretty
good.  Additionally, all functional tests from TMail are to be passing before
the gem gets released.

It also means you can be sure Mail will behave correctly.

== API Policy

No API removals within a single point release.  All removals to be depreciated with
warnings for at least one MINOR point release before removal.

Also, all private or protected methods to be declared as such - though this is still I/P.

== Installation

Installation is fairly simple, I host mail on gemcutter, so you can just do:

 # gem install mail

if you are on gemcutter, if you aren't, you can by doing:

 # gem install gemcutter
 # gem tumble
 # gem install mail
 
Warning though, the above will change your first gem repository to gemcutter, this
may or may not be a problem for you.

If you want to install mail manually, you can download the gem from github and do:

 # gem install mail-2.2.0.gem
 
== Encodings

If you didn't know, handling encodings in Emails is not as straight forward as you
would hope.

I have tried to simplify it some:

1. All objects that can render into an email, have an :encoded method.  Encoded will
   return the object as a complete string ready to send in the mail system, that is,
   it will include the header field and value and CRLF at the end and wrapped as
   needed.
   
2. All objects that can render into an email, have a :decoded method.  Decoded will
   return the object's "value" only as a string.  This means it will not include
   the header fields (like 'To:' or 'Subject:').
   
3. By default, calling :to_s on a container object will call it's encoded method, while
   :to_s on a field object will call it's decoded method.  So calling :to_s on a Mail
   object will return the mail, all encoded ready to send, while calling :to_s on the
   From field or the body will return the decoded value of the object.  The header object
   of Mail is considered a container.  If you are in doubt, call :encoded, or :decoded
   explicitly, this is safer if you are not sure.
   
4. Structured fields that have parameter values that can be encoded (e.g. Content-Type) will
   provide decoded parameter values when you call the parameter names as methods against
   the object.
   
5. Structured fields that have parameter values that can be encoded (e.g. Content-Type) will
   provide encoded parameter values when you call the parameter names through the 
   object.parameters['<parameter_name>'] method call.
 
== Contributing

Please do!  Contributing is easy in Mail:

1. Check the Reference RFCs, they are in the References directory, so no excuses.
2. Open a ticket on github, maybe someone else has the problem too
3. Make a fork of my github repository
4. Make a spec driven change to the code base
5. Make sure it works and all specs pass, on Ruby versions 1.8.6, 1.8.7 and 1.9
6. Update the README if needed to reflect your change / addition
7. With all specs passing push your changes back to your fork
8. Send me a pull request

== Usage

All major mail functions should be able to happen from the Mail::module.
So, you should be able to just "require 'mail'" to get started.

=== Making an email

 require 'mail'
 
 mail = Mail.new do
      from 'mikel@test.lindsaar.net'
        to 'you@test.lindsaar.net'
   subject 'This is a test email'
      body File.read('body.txt')
 end

 mail.to_s #=> "From: mikel@test.lindsaar.net\r\nTo: you@...

=== Making an email, have it your way:

 require 'mail'
 
 mail = Mail.new do
   body File.read('body.txt')
 end

 mail['from'] = 'mikel@test.lindsaar.net'
 mail[:to]    = 'you@test.lindsaar.net'
 mail.subject = 'This is a test email'
 
 mail.to_s #=> "From: mikel@test.lindsaar.net\r\nTo: you@...

=== Don't Worry About Message IDs:

 require 'mail'
 
 mail = Mail.new do
     to 'you@test.lindsaar.net'
   body 'Some simple body'
 end

 mail.to_s =~ /Message\-ID: <[\d\w_]+@.+.mail/ #=> 27
 
Mail will automatically add a Message-ID field if it is missing and
give it a unique, random Message-ID along the lines of:

 <4a7ff76d7016_13a81ab802e1@local.fqdn.mail>
 
=== Or do worry about Message-IDs:

 require 'mail'
 
 mail = Mail.new do
          to 'you@test.lindsaar.net'
  message_id '<ThisIsMyMessageId@some.domain.com>'
        body 'Some simple body'
 end
 
 mail.to_s =~ /Message\-ID: <ThisIsMyMessageId@some.domain.com>/ #=> 27

Mail will take the message_id you assign to it trusting that you know
what you are doing.

=== Sending an email:

Mail defaults to sending via SMTP to local host port 25.  If you have a 
sendmail or postfix daemon running on on this port, sending email is as
easy as:

 Mail.deliver do
       from 'me@test.lindsaar.net'
         to 'you@test.lindsaar.net'
    subject 'Here is the image you wanted'
       body File.read('body.txt')
   add_file '/full/path/to/somefile.png'
 end

or
 
 mail = Mail.new do
       from 'me@test.lindsaar.net'
         to 'you@test.lindsaar.net'
    subject 'Here is the image you wanted'
       body File.read('body.txt')
   add_file {:filename => 'somefile.png', :content => File.read('/somefile.png')}
 end
 
 mail.deliver!

Sending via sendmail can be done like so:

  mail = Mail.new do
        from 'me@test.lindsaar.net'
          to 'you@test.lindsaar.net'
     subject 'Here is the image you wanted'
        body File.read('body.txt')
    add_file {:filename => 'somefile.png', :content => File.read('/somefile.png')}
  end
  
  mail.delivery_method :sendmail
  
  mail.deliver

{Learn more about SMTP Delivery}[link:classes/Mail/SMTP.html]

{Learn more about File Delivery}[link:classes/Mail/FileDelivery.html]

{Learn more about Sendmail Delivery}[link:classes/Mail/Sendmail.html]

{Learn more about Test Email Delivery}[link:classes/Mail/TestMailer.html]

=== Getting emails from a pop server:

The most recent email:

 Mail.defaults do
   retriever_method :pop3, { :address             => "pop.gmail.com",
                             :port                => 995,
                             :user_name           => '<username>',
                             :password            => '<password>',
                             :enable_ssl          => true }
 end

 Mail.all    #=> Returns an array of all emails
 Mail.first  #=> Returns the first unread email
 Mail.last   #=> Returns the first unread email

The first 10 emails sorted by date in ascending order:

 require 'mail'

 Mail.defaults do
   retriever_method :pop3, { :address             => "pop.gmail.com",
                             :port                => 995,
                             :user_name           => '<username>',
                             :password            => '<password>',
                             :enable_ssl          => true }
 end

 emails = Mail.find(:what => :first, :count => 10, :order => :asc)
 emails.length #=> 10

Or even all emails:

 Mail.defaults do
   retriever_method :pop3, { :address             => "pop.gmail.com",
                             :port                => 995,
                             :user_name           => '<username>',
                             :password            => '<password>',
                             :enable_ssl          => true }
 end

 emails = Mail.all

 emails.length #=> LOTS!

{Learn more about POP3}[link:classes/Mail/POP3.html]

{Learn more about IMAP}[link:classes/Mail/IMAP.html]

=== Reading an Email

 require 'mail'
 
 mail = Mail.read('/path/to/message.eml')
 
 mail.envelope.from   #=> 'mikel@test.lindsaar.net'
 mail.from.addresses  #=> ['mikel@test.lindsaar.net', 'ada@test.lindsaar.net']
 mail.sender.address  #=> 'mikel@test.lindsaar.net'
 mail.to              #=> 'bob@test.lindsaar.net'
 mail.cc              #=> 'sam@test.lindsaar.net'
 mail.subject         #=> "This is the subject"
 mail.date.to_s       #=> '21 Nov 1997 09:55:06 -0600'
 mail.message_id      #=> '<4D6AA7EB.6490534@xxx.xxx>'
 mail.body.decoded    #=> 'This is the body of the email...

Many more methods available.

=== Reading a Multipart Email

 require 'mail'
 
 mail = Mail.read('multipart_email')
 
 mail.multipart?          #=> true
 mail.parts.length        #=> 2
 mail.preamble            #=> "Text before the first part"
 mail.epilogue            #=> "Text after the last part"
 mail.parts.map { |p| p.content_type }  #=> ['text/plain', 'application/pdf']
 mail.parts.map { |p| p.class }         #=> [Mail::Message, Mail::Message]
 mail.parts[0].content_type_parameters  #=> {'charset' => 'ISO-8859-1'}
 mail.parts[1].content_type_parameters  #=> {'name' => 'my.pdf'}

Mail generates a tree of parts.  Each message has many or no parts.  Each part
is another message which can have many or no parts.

A message will only have parts if it is a multipart/mixed or related/mixed
content type and has a boundary defined.

=== Writing and sending a multipart/alternative (html and text) email

Mail makes some basic assumptions and makes doing the common thing as 
simple as possible.... (asking a lot from a mail library)

 require 'mail'

 mail = Mail.deliver do
   to 'nicolas@test.lindsaar.net.au'
   from 'Mikel Lindsaar <mikel@test.lindsaar.net.au>'
   subject 'First multipart email sent with Mail'
   text_part do
     body 'This is plain text'
   end
   html_part do
     content_type 'text/html; charset=UTF-8'
     body '<h1>This is HTML</h1>'
   end
 end
 
Mail then delivers the email at the end of the block and returns the
resulting Mail::Message object, which you can then inspect if you
so desire...

 puts mail.to_s #=>

 To: nicolas@test.lindsaar.net.au
 From: Mikel Lindsaar <mikel@test.lindsaar.net.au>
 Subject: First multipart email sent with Mail
 Content-Type: multipart/alternative;
   boundary=--==_mimepart_4a914f0c911be_6f0f1ab8026659
 Message-ID: <4a914f12ac7e_6f0f1ab80267d1@baci.local.mail>
 Date: Mon, 24 Aug 2009 00:15:46 +1000
 Mime-Version: 1.0
 Content-Transfer-Encoding: 7bit


 ----==_mimepart_4a914f0c911be_6f0f1ab8026659
 Content-ID: <4a914f12c8c4_6f0f1ab80268d6@baci.local.mail>
 Date: Mon, 24 Aug 2009 00:15:46 +1000
 Mime-Version: 1.0
 Content-Type: text/plain
 Content-Transfer-Encoding: 7bit

 This is plain text
 ----==_mimepart_4a914f0c911be_6f0f1ab8026659
 Content-Type: text/html; charset=UTF-8
 Content-ID: <4a914f12cf86_6f0f1ab802692c@baci.local.mail>
 Date: Mon, 24 Aug 2009 00:15:46 +1000
 Mime-Version: 1.0
 Content-Transfer-Encoding: 7bit

 <h1>This is HTML</h1>
 ----==_mimepart_4a914f0c911be_6f0f1ab8026659--

Mail inserts the content transfer encoding, the mime version, 
the content-id's and handles the content-type and boundary.

Mail assumes that if your text in the body is only us-ascii, that your
transfer encoding is 7bit and it is text/plain.  You can override this
by explicitly declaring it.

=== Making Multipart/Alternate, without a block

You don't have to use a block with the text and html part included, you
can just do it declaratively.  However, you need to add Mail::Parts to
an email, not Mail::Messages.

 require 'mail'
 
 mail = Mail.new do
   to 'nicolas@test.lindsaar.net.au'
   from 'Mikel Lindsaar <mikel@test.lindsaar.net.au>'
   subject 'First multipart email sent with Mail'
 end

 text_part = Mail::Part.new do
   body 'This is plain text'
 end
 
 html_part = Mail::Part.new do
   content_type 'text/html; charset=UTF-8'
   body '<h1>This is HTML</h1>'
 end
 
 mail.text_part = text_part
 mail.html_part = html_part

Results in the same email as done using the block form

=== Getting error reports from an email:

 require 'mail'
 
 @mail = Mail.read('/path/to/bounce_message.eml')
 
 @mail.bounced?         #=> true
 @mail.final_recipient  #=> rfc822;mikel@dont.exist.com
 @mail.action           #=> failed
 @mail.error_status     #=> 5.5.0
 @mail.diagnostic_code  #=> smtp;550 Requested action not taken: mailbox unavailable 
 @mail.retryable?       #=> false

=== Attaching and Detaching Files

  require 'mail'

You can just read the file off an absolute path, Mail will try
to guess the mime_type and will encode the file in Base64 for you.
  
  @mail = Mail.new
  @mail.add_file("/path/to/file.jpg")
  @mail.parts.first.attachment? #=> true
  @mail.parts.first.content_transfer_encoding.to_s #=> 'base64'
  @mail.attachments.first.mime_type #=> 'image/jpg'
  @mail.attachments.first.filename #=> 'file.jpg'
  @mail.attachments.first.decoded == File.read('/path/to/file.jpg') #=> true

Or You can pass in file_data and give it a filename, again, mail
will try and guess the mime_type for you.
  
  @mail = Mail.new
  @mail.attachments['myfile.pdf'] = File.read('path/to/myfile.pdf')
  @mail.parts.first.attachment? #=> true
  @mail.attachments.first.mime_type #=> 'application/pdf'
  @mail.attachments.first.decoded == File.read('path/to/myfile.pdf') #=> true

You can also override the guessed MIME media type if you really know better
than mail (this should be rarely needed)

  @mail = Mail.new
  file_data = File.read('path/to/myfile.pdf')
  @mail.attachments['myfile.pdf'] = { :mime_type => 'application/x-pdf',
                                      :content => File.read('path/to/myfile.pdf') }
  @mail.parts.first.mime_type #=> 'application/x-pdf'

Of course... Mail will round trip an attachment as well

  @mail = Mail.new do
    to 'nicolas@test.lindsaar.net.au'
    from 'Mikel Lindsaar <mikel@test.lindsaar.net.au>'
    subject 'First multipart email sent with Mail'
    text_part do
      body 'Here is the attachment you wanted'
    end
    html_part do
      content_type 'text/html; charset=UTF-8'
      body '<h1>Funky Title</h1><p>Here is the attachment you wanted</p>'
    end
    add_file '/path/to/myfile.pdf'
  end

  @round_tripped_mail = Mail.new(@mail.encoded)
  
  @round_tripped_mail.attachments.length #=> 1
  @round_tripped_mail.attachments.first.filename #=> 'myfile.pdf'

== Using Mail with Testing or Spec'ing Libraries

If mail is part of your system, you'll need a way to test it without actually
sending emails, the TestMailer can do this for you.

  require 'mail'
  => true
  Mail.defaults do
    delivery_method :test
  end
  => #<Mail::Configuration:0x19345a8 @delivery_method=Mail::TestMailer>
  Mail::TestMailer.deliveries
  => []
  Mail.deliver do
    to 'mikel@me.com'
    from 'you@you.com'
    subject 'testing'
    body 'hello'
  end
  => #<Mail::Message:0x19284ec ...
  Mail::TestMailer.deliveries.length
  => 1
  Mail::TestMailer.deliveries.first
  => #<Mail::Message:0x19284ec ...
  Mail::TestMailer.deliveries.clear
  => []

== Excerpts from TREC Spam Corpus 2005

The spec fixture files in spec/fixtures/emails/from_trec_2005 are from the 
2005 TREC Public Spam Corpus. They remain copyrighted under the terms of
that project and license agreement. They are used in this project to verify 
and describe the development of this email parser implementation.

http://plg.uwaterloo.ca/~gvcormac/treccorpus/

They are used as allowed by 'Permitted Uses, Clause 3':

    "Small excerpts of the information may be displayed to others
     or published in a scientific or technical context, solely for
     the purpose of describing the research and development and
     related issues."
     
     -- http://plg.uwaterloo.ca/~gvcormac/treccorpus/

== License:

(The MIT License)

Copyright (c) 2009

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/nokogiri-1.4.4" name="nokogiri" version="1.4.4" timestamp="1292707828000" parser_version="9" git="false">
          <additional_info authors="Aaron Patterson, Mike Dalessio" email="aaronp@rubyforge.org, mike.dalessio@gmail.com" homepage="http://nokogiri.org">
            <summary>Nokogiri (é¸) is an HTML, XML, SAX, and Reader parser</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/railties-3.0.3" name="railties" version="3.0.3" timestamp="1292707633000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Tools for creating, working with, and running Rails applications.</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rake" version="0.8.7" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="thor" version="0.14.4" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="actionpack" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/cucumber-rails-0.3.2" name="cucumber-rails" version="0.3.2" timestamp="1292707887000" parser_version="9" git="false">
          <additional_info authors="Dennis BlÃ¶te, Aslak HellesÃ¸y, Rob Holland" email="cukes@googlegroups.com" homepage="http://github.com/aslakhellesoy/cucumber-rails">
            <summary>Cucumber Generators and Runtime for Rails</summary>
          </additional_info>
          <dependency name="cucumber" version="0.8.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[= Cucumber-Rails

Cucumber-Rails brings Cucumber to Rails2 and Rails3. It contains 2 generators - one
for bootstrapping your Rails app for Cucumber, and a second one for generating features.

Cucumber-Rails also contains Cucumber Step Definitions that wrap Capybara or Webrat,
giving you a head start for writing Cucumber features against your Rails app.

== Installation

=== Rails 3:

Before you can use the generator, add the necessary gems to your project's Gemfile as follows:

  gem 'capybara'
  gem 'database_cleaner'
  gem 'cucumber-rails'
  gem 'cucumber', '0.7.2'
  gem 'rspec-rails', '2.0.0.beta.8'
  gem 'spork'
  gem 'launchy'    # So you can do Then show me the page

Then install the gems by running:

  bundle install

Learn about the various options:

  ruby script/rails generate cucumber:install --help

Finally, bootstrap your Rails app, for example:

  ruby script/rails generate cucumber:install --rspec --capybara

=== Rails 2.x:

Before you can use the generator, install the gem by running:

  gem install cucumber-rails

Learn about the various options:

  ruby script/generate cucumber --help

Finally, bootstrap your Rails app, for example:

  ruby script/generate cucumber --rspec --capybara

== Generating a Cucumber feature

IMPORTANT: Only do this if you are new to Cucumber. We recommend you write your
Cucumber features by hand once you get the hang of it.

=== Rails 3:

Example:

  ruby script/rails generate cucumber:feature post title:string body:text published:boolean
  ruby script/rails generate scaffold post title:string body:text published:boolean
  rake db:migrate
  rake cucumber

=== Rails 2:

Example:

  ruby script/generate feature post title:string body:text published:boolean
  ruby script/generate scaffold post title:string body:text published:boolean
  rake db:migrate
  rake cucumber
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/abstract-1.0.0" name="abstract" version="1.0.0" timestamp="1292707626000" parser_version="9" git="false">
          <additional_info authors="makoto kuwata" email="N/A" homepage="http://rubyforge.org/projects/abstract">
            <summary>a library which enable you to define abstract method in Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/devise-1.1.5" name="devise" version="1.1.5" timestamp="1292707889000" parser_version="9" git="false">
          <additional_info authors="JosÃ© Valim, Carlos AntÃ´nio" email="contact@plataformatec.com.br" homepage="http://github.com/plataformatec/devise">
            <summary>Flexible authentication solution for Rails with Warden</summary>
          </additional_info>
          <dependency name="bcrypt-ruby" version="2.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="warden" version="1.0.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[== Devise

Devise is a flexible authentication solution for Rails based on Warden. It:

* Is Rack based;
* Is a complete MVC solution based on Rails engines;
* Allows you to have multiple roles (or models/scopes) signed in at the same time;
* Is based on a modularity concept: use just what you really need.

Right now it's composed of 11 modules:

* Database Authenticatable: encrypts and stores a password in the database to validate the authenticity of an user while signing in. The authentication can be done both through POST requests or HTTP Basic Authentication.
* Token Authenticatable: signs in an user based on an authentication token (also known as "single access token"). The token can be given both through query string or HTTP Basic Authentication.
* Confirmable: sends emails with confirmation instructions and verifies whether an account is already confirmed during sign in.
* Recoverable: resets the user password and sends reset instructions.
* Registerable: handles signing up users through a registration process, also allowing them to edit and destroy their account.
* Rememberable: manages generating and clearing a token for remembering the user from a saved cookie.
* Trackable: tracks sign in count, timestamps and IP address.
* Timeoutable: expires sessions that have no activity in a specified period of time.
* Validatable: provides validations of email and password. It's optional and can be customized, so you're able to define your own validations.
* Lockable: locks an account after a specified number of failed sign-in attempts. Can unlock via email or after a specified time period.

== Installation

Devise 1.1 supports Rails 3 and is NOT backward compatible. You can use the latest Rails 3 beta gem with Devise latest gem:

  gem install devise --version=1.1.3

If you want to use Rails master (from git repository) you need to use Devise from git repository and vice-versa.

After you install Devise and add it to your Gemfile, you need to run the generator:

  rails generate devise:install

The generator will install an initializer which describes ALL Devise's configuration options and you MUST take a look at it. When you are done, you are ready to add Devise to any of your models using the generator:

  rails generate devise MODEL

Replace MODEL by the class name you want to add devise, like User, Admin, etc. This will create a model (if one does not exist) and configure it with default Devise modules. The generator will also create a migration file (if your ORM support them) and configure your routes. Continue reading this file to understand exactly what the generator produces and how to use it.

== Rails 2.3

If you want to use the Rails 2.3.x version, you should do:

  gem install devise --version=1.0.8

And please check the README at the v1.0 branch since this one is based on Rails 3:

  http://github.com/plataformatec/devise/tree/v1.0

== Ecosystem

Devise ecosystem is growing solid day after day. If you just need a walkthrough about setting up Devise, this README will work great. But if you need more documentation and resources, please check both the wiki and rdoc:

* http://rdoc.info/projects/plataformatec/devise
* http://wiki.github.com/plataformatec/devise

Both links above are for Devise with Rails 3. If you need to use Devise with Rails 2.3, you can always run `gem server` from the command line after you install the gem to access the old documentation.

Another great way to learn Devise are Ryan Bates' screencasts:

* http://railscasts.com/episodes/209-introducing-devise
* http://railscasts.com/episodes/210-customizing-devise

And a few example applications:

* Rails 2.3 app using Devise at http://github.com/plataformatec/devise_example
* Rails 2.3 app using Devise with subdomains at http://github.com/fortuity/subdomain-authentication
* Rails 3.0 app with Mongoid at http://github.com/fortuity/rails3-mongoid-devise

Finally, Devise also has several extensions built by the community. Don't forget to check them at the end of this README. If you want to write an extension on your own, you should also check Warden (http://github.com/hassox/warden), a Rack Authentication Framework which Devise depends on.

== Basic Usage

This is a walkthrough with all steps you need to setup a devise resource, including model, migration, route files, and optional configuration.

Devise must be set up within the model (or models) you want to use. Devise routes must be created inside your config/routes.rb file.

We're assuming here you want a User model with some Devise modules, as outlined below:

  class User < ActiveRecord::Base
    devise :database_authenticatable, :confirmable, :recoverable, :rememberable, :trackable, :validatable
  end

After you choose which modules to use, you need to set up your migrations. Luckily, Devise has some helpers to save you from this boring work:

  create_table :users do |t|
    t.database_authenticatable
    t.confirmable
    t.recoverable
    t.rememberable
    t.trackable
    t.timestamps
  end

Devise doesn't use _attr_accessible_ or _attr_protected_ inside its modules, so be sure to define attributes as accessible or protected in your model.

Configure your routes after setting up your model. Open your config/routes.rb file and add:

  devise_for :users

This will use your User model to create a set of needed routes (you can see them by running `rake routes`).

Options for configuring your routes include :class_name (to set the class for that route), :path_prefix, :path and :path_names, where the last two have the same meaning as in common routes. The available :path_names are:

  devise_for :users, :path => "usuarios", :path_names => { :sign_in => 'login', :sign_out => 'logout', :password => 'secret', :confirmation => 'verification', :unlock => 'unblock', :registration => 'register', :sign_up => 'cmon_let_me_in' }

Be sure to check devise_for documentation for details.

This exactly what the devise generator produces for you: model, routes and migrations. Don't forget to run rake db:migrate and you are ready to go! But don't stop reading here, we still have a lot to tell you.

== Controller filters and helpers

Devise will create some helpers to use inside your controllers and views. To set up a controller with user authentication, just add this before_filter:

  before_filter :authenticate_user!

To verify if a user is signed in, use the following helper:

  user_signed_in?

For the current signed-in user, this helper is available:

  current_user

You can access the session for this scope:

  user_session

After signing in a user, confirming the account or updating the password, Devise will look for a scoped root path to redirect. Example: For a :user resource, it will use user_root_path if it exists, otherwise default root_path will be used. This means that you need to set the root inside your routes:

  root :to => "home"

You can also overwrite after_sign_in_path_for and after_sign_out_path_for to customize your redirect hooks.

Finally, you need to set up default url options for the mailer in each environment. Here is the configuration for config/environments/development.rb:

  config.action_mailer.default_url_options = { :host => 'localhost:3000' }

== Tidying up

Devise allows you to set up as many roles as you want. For example, you may have a User model and also want an Admin model with just authentication, trackable, lockable and timeoutable features and no confirmation or password-recovery features. Just follow these steps:

  # Create a migration with the required fields
  create_table :admins do |t|
    t.database_authenticatable
    t.lockable
    t.trackable
    t.timestamps
  end

  # Inside your Admin model
  devise :database_authenticatable, :trackable, :timeoutable, :lockable

  # Inside your routes
  devise_for :admins

  # Inside your protected controller
  before_filter :authenticate_admin!

  # Inside your controllers and views
  admin_signed_in?
  current_admin
  admin_session

== Model configuration

The devise method in your models also accepts some options to configure its modules. For example, you can choose which encryptor to use in database_authenticatable:

  devise :database_authenticatable, :confirmable, :recoverable, :encryptor => :bcrypt

Besides :encryptor, you can define :pepper, :stretches, :confirm_within, :remember_for, :timeout_in, :unlock_in and other values. For details, see the initializer file that was created when you invoked the "devise:install" generator described above.

== Configuring views

We built Devise to help you quickly develop an application that uses authentication. However, we don't want to be in your way when you need to customize it.

Since Devise is an engine, all its views are packaged inside the gem. These views will help you get started, but after sometime you may want to change them. If this is the case, you just need to invoke the following generator, and it will copy all views to your application:

  rails generate devise:views

However, if you have more than one role in your application (such as "User" and "Admin"), you will notice that Devise uses the same views for all roles. Fortunately, Devise offers an easy way to customize views. All you need to do is set "config.scoped_views = true" inside "config/initializers/devise.rb".

After doing so, you will be able to have views based on the role like "users/sessions/new" and "admins/sessions/new". If no view is found within the scope, Devise will use the default view at "devise/sessions/new".

== Configuring controllers

If the customization at the views level is not enough, you can customize each controller by following these steps:

1) Create your custom controller, for example a Admins::SessionsController:

    class Admins::SessionsController < Devise::SessionsController
    end

2) Tell the router to use this controller:

    devise_for :admins, :controllers => { :sessions => "admin/sessions" }

3) And since we changed the controller, it won't use the "devise/sessions" views, so remember to copy "devise/sessions" to "admin/sessions".

Remember that Devise uses flash messages to let users know if sign in was successful or failed. Devise expects your application to call "flash[:notice]" and "flash[:alert]" as appropriate.

== I18n

Devise uses flash messages with I18n with the flash keys :success and :failure. To customize your app, you can set up your locale file:

  en:
    devise:
      sessions:
        signed_in: 'Signed in successfully.'

You can also create distinct messages based on the resource you've configured using the singular name given in routes:

  en:
    devise:
      sessions:
        user:
          signed_in: 'Welcome user, you are signed in.'
        admin:
          signed_in: 'Hello admin!'

The Devise mailer uses the same pattern to create subject messages:

  en:
    devise:
      mailer:
        confirmation_instructions: 'Hello everybody!'
        user:
          confirmation_instructions: 'Hello User! Please confirm your email'
          reset_password_instructions: 'Reset instructions'

Take a look at our locale file to check all available messages.

== Test helpers

Devise includes some tests helpers for functional specs. To use them, you just need to include Devise::TestHelpers in your test class and use the sign_in and sign_out method. Such methods have the same signature as in controllers:

  sign_in :user, @user   # sign_in(scope, resource)
  sign_in @user          # sign_in(resource)

  sign_out :user         # sign_out(scope)
  sign_out @user         # sign_out(resource)

You can include the Devise Test Helpers in all of your tests by adding the following to the bottom of your test/test_helper.rb or spec/spec_helper.rb file:

  class ActionController::TestCase
    include Devise::TestHelpers
  end

Do not use such helpers for integration tests such as Cucumber or Webrat. Instead, fill in the form or explicitly set the user in session. For more tips, check the wiki (http://wiki.github.com/plataformatec/devise).

== Migrating from other solutions

Devise implements encryption strategies for Clearance, Authlogic and Restful-Authentication. To make use of these strategies, set the desired encryptor in the encryptor initializer config option. You might also need to rename your encrypted password and salt columns to match Devise's fields (encrypted_password and password_salt).

== Other ORMs

Devise supports ActiveRecord (by default) and Mongoid. We offer experimental Datamapper support (with the limitation that the Devise test suite does not run completely with Datamapper). To choose other ORM, you just need to configure it in the initializer file.

== Extensions

Devise also has extensions created by the community:

* http://github.com/scambra/devise_invitable adds support to Devise for sending invitations by email.

* http://github.com/grimen/devise_facebook_connectable adds support for Facebook Connect authentication, and optionally fetching user info from Facebook in the same step.

* http://github.com/joshk/devise_imapable adds support for imap based authentication, excellent for internal apps when an LDAP server isn't available.

* http://github.com/cschiewek/devise_ldap_authenticatable adds support for LDAP authentication via simple bind.

Please consult their respective documentation for more information and requirements.

== TODO

Please refer to TODO file.

== Security

Needless to say, security is extremely important to Devise. If you find yourself in a possible security issue with Devise, please go through the following steps, trying to reproduce the bug:

1) Look at the source code a bit to find out whether your assumptions are correct;
2) If possible, provide a way to reproduce the bug: a small app on Github or a step-by-step to reproduce;
3) E-mail us or send a Github private message instead of using the normal issues;

Being able to reproduce the bug is the first step to fix it. Thanks for your understanding.

== Maintainers

* JosÃ© Valim (http://github.com/josevalim)
* Carlos AntÃ´nio da Silva (http://github.com/carlosantoniodasilva)

== Contributors

We have a long list of valued contributors. Check them all at:

http://github.com/plataformatec/devise/contributors

== Bugs and Feedback

If you discover any bugs, please create an issue on GitHub.

http://github.com/plataformatec/devise/issues

For support, send an e-mail to the mailing list.

http://groups.google.com/group/plataformatec-devise

== License

MIT License. Copyright 2010 Plataforma Tecnologia. http://blog.plataformatec.com.br
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/mime-types-1.16" name="mime-types" version="1.16" timestamp="1292707630000" parser_version="9" git="false">
          <additional_info authors="Austin Ziegler" email="austin@rubyforge.org" homepage="http://mime-types.rubyforge.org/">
            <summary>Manages a MIME Content-Type database that will return the Content-Type for a given filename.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/cucumber-0.10.0" name="cucumber" version="0.10.0" timestamp="1292707887000" parser_version="9" git="false">
          <additional_info authors="Aslak HellesÃ¸y" email="cukes@googlegroups.com" homepage="http://cukes.info">
            <summary>cucumber-0.10.0</summary>
          </additional_info>
          <dependency name="diff-lcs" version="1.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="term-ansicolor" version="1.0.5" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="builder" version="2.1.2" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="json" version="1.4.6" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="gherkin" version="2.3.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[= Cucumber

The main website is at http://cukes.info/
The documentation is at http://wiki.github.com/aslakhellesoy/cucumber/

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with Rakefile, version, or history.
  (if you want to have your own version, that is fine but
   bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Running tests

  rake

If you get errors about missing gems - just install them.

== Copyright

Copyright (c) 2008,2009 Aslak HellesÃ¸y. See LICENSE for details.

]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/to_csv-0.2.2" name="to_csv" version="0.2.2" timestamp="1293398337000" parser_version="9" git="false">
          <additional_info authors="Stefan Penner" email="stefan.penner@gmail.com" homepage="http://github.com/stefanpenner/to_csv">
            <summary>yet another ruby to csv dsl</summary>
          </additional_info>
          <dependency name="fastercsv" version="0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="3.0.0.beta4" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[= to_csv

Description goes here.

    class Email
      include ToCsv
      attr_accessor :name, :data, :some_boolean
    
      csv do
        name
        data
        some_boolean
      end
    
      csv :just_name do
        name
      end
    
      def initialize(name,data,some_boolean)
        @name = name
        @data = data
        @some_boolean = some_boolean
      end
    end

   
    @email = Email.new("Stefan Penner","asdf asdf", true)

    @email.to_csv
    > "Stefan Penner, asdf asdf, true\n"

    @email.to_csv(:just_name)
    > "Stefan Penner\n"


== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Stefan Penner. See LICENSE for details.
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/celerity-0.8.6" name="celerity" version="0.8.6" timestamp="1292707820000" parser_version="9" git="false">
          <additional_info authors="Jari Bakken, T. Alexander Lystad, Knut Johannes Dahle" email="jari.bakken@gmail.com" homepage="http://github.com/jarib/celerity">
            <summary>Celerity is a JRuby library for easy and fast functional test automation for web applications.</summary>
          </additional_info>
          <readme xml:space="preserve"><![CDATA[= Celerity

* http://celerity.rubyforge.org/

== Description

Celerity is a JRuby library for easy and fast functional test automation for web applications.

Celerity is a JRuby wrapper around HtmlUnit â a headless Java browser with 
JavaScript support. It provides a simple API for programmatic navigation through
web applications. Celerity provides a superset of Watir's API.

== Features

* *Fast*: No time-consuming GUI rendering or unessential downloads
* *Scalable*: Java threads lets you run tests in parallel
* *Easy to use*: Simple API
* *Portable*: Cross-platform thanks to the JVM
* *Unintrusive*: No browser window interrupting your workflow (runs in background)
	
== Requirements

* JRuby 1.2.0 or higher
* Java 6

== Install

    jruby -S gem install celerity
  
To always get the latest version, you should use Gemcutter as your primary gem source:
  
    jruby -S gem install gemcutter
    jruby -S gem tumble
    jruby -S gem install celerity
  
  
== Example

    require "rubygems"
    require "celerity" 

    browser = Celerity::Browser.new
    browser.goto('http://www.google.com')
    browser.text_field(:name, 'q').value = 'Celerity'
    browser.button(:name, 'btnG').click

    puts "yay" if browser.text.include? 'celerity.rubyforge.org'
  
== Source

The source code is available on [GitHub](http://github.com/jarib/celerity/tree/master).


== Wiki & Bug Tracker

* [Wiki](http://github.com/jarib/celerity/wikis)
* [Bug Tracker](http://github.com/jarib/celerity/issues)

== Related projects

* [WatirSpec](http://github.com/jarib/watirspec/tree/master)
* [Celerity Viewers](http://github.com/jarib/celerity-viewers)

== License

Celerity - JRuby wrapper for HtmlUnit
Copyright (c) 2008-2010 FINN.no AS

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/ffi-0.6.3" name="ffi" version="0.6.3" timestamp="1292707842000" parser_version="9" git="false">
          <additional_info authors="Wayne Meissner" email="wmeissner@gmail.com" homepage="http://wiki.github.com/ffi/ffi">
            <summary>Ruby-FFI is a ruby extension for programmatically loading dynamic libraries, binding functions within them, and calling those functions from Ruby code</summary>
          </additional_info>
          <dependency name="rake" version="0.8.7" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rspec-rails-2.3.1" name="rspec-rails" version="2.3.1" timestamp="1292707898000" parser_version="9" git="false">
          <additional_info authors="David Chelimsky" email="dchelimsky@gmail.com" homepage="http://github.com/rspec/rspec-rails">
            <summary>rspec-rails-2.3.1</summary>
          </additional_info>
          <dependency name="rspec" version="2.3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="railties" version="3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="actionpack" version="3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[# rspec-rails-2

rspec-2 for rails-3 with lightweight extensions to each

NOTE: rspec-2 does _not_ support rails-2. Use rspec-rails-1.3.x for rails-2.

## Documentation

The [Cucumber features](http://relishapp.com/rspec/rspec-rails) are the
most comprehensive and up-to-date docs for end-users.

The [RDoc](http://rubydoc.info/gems/rspec-rails/2.3.0/frames) provides additional
information for contributors and/or extenders.

All of the documentation is open source and a work in progress. If you find it
lacking or confusing, you can help improve it by submitting requests and
patches to the [rspec-rails issue
tracker](https://github.com/rspec/rspec-rails/issues).

## Install

    gem install rspec-rails

This installs the following gems:

    rspec
    rspec-core
    rspec-expectations
    rspec-mocks
    rspec-rails

## Configure:

Add `rspec-rails` to the `:test` and `:development` groups in the Gemfile:

    group :test, :development do
      gem "rspec-rails", "~> 2.0.1"
    end

It needs to be in the `:development` group to expose generators and rake
tasks without having to type `RAILS_ENV=test`.

Now you can run: 

    script/rails generate rspec:install

This adds the spec directory and some skeleton files, including
the "rake spec" task. 

### Generators

If you type `script/rails generate`, the only RSpec generator you'll actually
see is `rspec:install`. That's because RSpec is registered with Rails as the
test framework, so whenever you generate application components like models,
controllers, etc, RSpec specs are generated instead of Test::Unit tests.

Note that the generators are there to help you get started, but they are no
substitute for writing your own examples, and they are only guaranteed to work
out of the box for the default scenario (`ActiveRecord` + `Webrat`).

### Autotest

The `rspec:install` generator creates an `./autotest/discover.rb` file, which
tells Autotest that you're using RSpec and Rails. You'll also need to add the
autotest (not autotest-rails) gem to your Gemfile:

    gem "autotest"

At this point, if all of the gems in your Gemfile are installed in system
gems, you can just type `autotest`. If, however, Bundler is managing any gems
for you directly (i.e. you've got `:git` or `:path` attributes in the `Gemfile`),
you'll need to run `bundle exec autotest`.

### Webrat and Capybara

You can choose between webrat or capybara for simulating a browser, automating
a browser, or setting expectations using the matchers they supply. Just add
your preference to the Gemfile:

    gem "webrat"
    gem "capybara"

Note that Capybara matchers are not available in view or helper specs.

## Living on edge

Bundler makes it a snap to use the latest code for any gem your app depends on. For
rspec-rails, you'll need to point bundler to the git repositories for `rspec-rails`
and the other rspec related gems it depends on:

    gem "rspec-rails",        :git => "git://github.com/rspec/rspec-rails.git"
    gem "rspec",              :git => "git://github.com/rspec/rspec.git"
    gem "rspec-core",         :git => "git://github.com/rspec/rspec-core.git"
    gem "rspec-expectations", :git => "git://github.com/rspec/rspec-expectations.git"
    gem "rspec-mocks",        :git => "git://github.com/rspec/rspec-mocks.git"

Run `bundle install` and you'll have whatever is in git right now. Any time you
want to update to a newer head, just run `bundle update`.

Keep in mind that each of these codebases is under active development, which
means that its entirely possible that you'll pull from these repos and they won't
play nice together. If playing nice is important to you, stick to the published
gems.

## Backwards compatibility

This is a complete rewrite of the rspec-rails extension designed to work with
rails-3.x and rspec-2.x. It will not work with older versions of either rspec
or rails.  Many of the APIs from rspec-rails-1 have been carried forward,
however, so upgrading an app from rspec-1/rails-2, while not pain-free, should
not send you to the doctor with a migraine.

## Known issues

See http://github.com/rspec/rspec-rails/issues

# Request Specs

Request specs live in spec/requests.

    describe "widgets resource" do
      describe "GET index" do
        it "contains the widgets header" do
          get "/widgets/index"
          response.should have_selector("h1", :content => "Widgets")
        end
      end
    end

Request specs mix in behavior from Rails' integration tests. See the
docs for ActionDispatch::Integration::Runner for more information.

# Controller Specs

Controller specs live in spec/controllers, and mix in
ActionController::TestCase::Behavior. See the documentation
for ActionController::TestCase to see what facilities are
available from Rails.

You can use RSpec expectations/matchers or Test::Unit assertions.

## `render_views`
By default, controller specs do not render views.  This supports specifying
controllers without concern for whether the views they render work correctly
(NOTE: the template must exist, unlike rspec-rails-1. See Upgrade.markdown for
more information about this). If you prefer to render the views (a la Rails'
functional tests), you can use the `render_views` declaration in each example
group:

    describe SomeController do
      render_views
      ...

### * Upgrade note

`render_views` replaces `integrate_views` from rspec-rails-1.3

## `assigns`

Use `assigns(key)` to express expectations about instance variables that a controller
assigns to the view in the course of an action:

    get :index
    assigns(:widgets).should eq(expected_value)

# View specs

View specs live in spec/views, and mix in ActionView::TestCase::Behavior.

    describe "events/index.html.erb" do
      it "renders _event partial for each event" do
        assign(:events, [stub_model(Event), stub_model(Event)])
        render
        view.should render_template(:partial => "_event", :count => 2)
      end
    end

    describe "events/show.html.erb" do
      it "displays the event location" do
        assign(:event, stub_model(Event,
          :location => "Chicago"
        )
        render
        rendered.should contain("Chicago")
      end
    end

View specs infer the controller name and path from the path to the view
template. e.g. if the template is "events/index.html.erb" then:

    controller.controller_path == "events"
    controller.request.path_parameters[:controller] == "events"

This means that most of the time you don't need to set these values. When
spec'ing a partial that is included across different controllers, you _may_
need to override these values before rendering the view.

To provide a layout for the render, you'll need to specify _both_ the template
and the layout explicitly.  For example:

    render :template => "events/show", :layout => "layouts/application"

## `assign(key, val)`

Use this to assign values to instance variables in the view:

    assign(:widget, stub_model(Widget))
    render

The code above assigns `stub_model(Widget)` to the `@widget` variable in the view, and then
renders the view.

Note that because view specs mix in `ActionView::TestCase` behavior, any
instance variables you set will be transparently propagated into your views
(similar to how instance variables you set in controller actions are made
available in views). For example:

    @widget = stub_model(Widget)
    render # @widget is available inside the view

RSpec doesn't officially support this pattern, which only works as a
side-effect of the inclusion of `ActionView::TestCase`. Be aware that it may be
made unavailable in the future.

### * Upgrade note

`assign(key, value)` replaces `assigns[key] = value` from rspec-rails-1.3

## `rendered`

This represents the rendered view.

    render
    rendered.should =~ /Some text expected to appear on the page/

### * Upgrade note

`rendered` replaces `response` from rspec-rails-1.3

# Routing specs

Routing specs live in spec/routing.

    describe "routing to profiles" do
      it "routes /profile/:username to profile#show for username" do
        { :get => "/profiles/jsmith" }.should route_to(
          :controller => "profiles",
          :action => "show",
          :username => "jsmith"
        )
      end

      it "does not expose a list of profiles" do
        { :get => "/profiles" }.should_not be_routable
      end
    end

### * Upgrade note

`route_for` from rspec-rails-1.x is gone. Use `route_to` and `be_routable` instead.

# Helper specs

Helper specs live in spec/helpers, and mix in ActionView::TestCase::Behavior.

    describe EventsHelper do
      describe "#link_to_event" do
        it "displays the title, and formatted date" do
          event = Event.new("Ruby Kaigi", Date.new(2010, 8, 27))
          # helper is an instance of ActionView::Base configured with the
          # EventsHelper and all of Rails' built-in helpers
          helper.link_to_event.should =~ /Ruby Kaigi, 27 Aug, 2010/
        end
      end
    end

# Matchers

rspec-rails exposes domain-specific matchers to each of the example group types. Most
of them simply delegate to Rails' assertions.

## `be_a_new`
* Available in all specs.
* Primarily intended for controller specs

<pre>
object.should be_a_new(Widget)
</pre>

Passes if the object is a `Widget` and returns true for `new_record?`

## `render_template`
* Delegates to Rails' assert_template.
* Available in request, controller, and view specs.

In request and controller specs, apply to the response object:

    response.should render_template("new")

In view specs, apply to the view object:

    view.should render_template(:partial => "_form", :locals => { :widget => widget } )

## `redirect_to`
* Delegates to assert_redirect
* Available in request and controller specs.

<pre>
response.should redirect_to(widgets_path)
</pre>

## `route_to`

* Delegates to Rails' assert_routing.
* Available in routing and controller specs.

<pre>
{ :get => "/widgets" }.should route_to(:controller => "widgets", :action => "index")
</pre>

## `be_routable`

Passes if the path is recognized by Rails' routing. This is primarily intended
to be used with `should_not` to specify routes that should not be routable.

    { :get => "/widgets/1/edit" }.should_not be_routable

## Contribute

See [http://github.com/rspec/rspec-dev](http://github.com/rspec/rspec-dev)

## Also see

* [http://github.com/rspec/rspec](http://github.com/rspec/rspec)
* [http://github.com/rspec/rspec-core](http://github.com/rspec/rspec-core)
* [http://github.com/rspec/rspec-expectations](http://github.com/rspec/rspec-expectations)
* [http://github.com/rspec/rspec-mocks](http://github.com/rspec/rspec-mocks)
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/treetop-1.4.9" name="treetop" version="1.4.9" timestamp="1292707630000" parser_version="9" git="false">
          <additional_info authors="Nathan Sobo" email="nathansobo@gmail.com" homepage="http://functionalform.blogspot.com">
            <summary>A Ruby-based text parsing and interpretation DSL</summary>
          </additional_info>
          <dependency name="polyglot" version="0.3.1" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/activeresource-3.0.3" name="activeresource" version="3.0.3" timestamp="1292707629000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>REST modeling framework (part of Rails).</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="activemodel" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/ruby-debug19-0.11.6" name="ruby-debug19" version="0.11.6" timestamp="1292708831000" parser_version="9" git="false">
          <additional_info authors="Kent Sibilev, Mark Moseley" email="mark@fast-software.com" homepage="http://rubyforge.org/projects/ruby-debug19/">
            <summary>Command line interface (CLI) for ruby-debug-base</summary>
          </additional_info>
          <dependency name="columnize" version="0.3.1" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="ruby-debug-base19" version="0.11.19" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="linecache19" version="0.5.11" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/activemodel-3.0.3" name="activemodel" version="3.0.3" timestamp="1292707624000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>A toolkit for building modeling frameworks (part of Rails).</summary>
          </additional_info>
          <dependency name="builder" version="2.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="i18n" version="0.4" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/tzinfo-0.3.23" name="tzinfo" version="0.3.23" timestamp="1292707626000" parser_version="9" git="false">
          <additional_info authors="Philip Ross" email="phil.ross@gmail.com" homepage="http://tzinfo.rubyforge.org/">
            <summary>Daylight-savings aware timezone library</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/json-1.4.6" name="json" version="1.4.6" timestamp="1292707848000" parser_version="9" git="false">
          <additional_info authors="Florian Frank" email="flori@ping.de" homepage="http://flori.github.com/json">
            <summary>JSON Implementation for Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/archive-tar-minitar-0.5.2" name="archive-tar-minitar" version="0.5.2" timestamp="1292708824000" parser_version="9" git="false">
          <additional_info authors="Austin Ziegler, Mauricio Ferna'ndez" email="minitar@halostatue.ca" homepage="http://rubyforge.org/projects/ruwiki/">
            <summary>Provides POSIX tarchive management from Ruby programs.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/capybara-0.4.0" name="capybara" version="0.4.0" timestamp="1292707846000" parser_version="9" git="false">
          <additional_info authors="Jonas Nicklas" email="jonas.nicklas@gmail.com" homepage="http://github.com/jnicklas/capybara">
            <summary>Capybara aims to simplify the process of integration testing Rack applications, such as Rails, Sinatra or Merb</summary>
          </additional_info>
          <dependency name="culerity" version="0.2.4" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rack-test" version="0.5.4" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rack" version="1.0.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="mime-types" version="1.16" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="celerity" version="0.7.9" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="selenium-webdriver" version="0.0.27" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="nokogiri" version="1.3.3" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="xpath" version="0.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rake-0.8.7" name="rake" version="0.8.7" timestamp="1292708399000" parser_version="9" git="false">
          <additional_info authors="Jim Weirich" email="jim@weirichhouse.org" homepage="http://rake.rubyforge.org">
            <summary>Ruby based make-like utility.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/actionpack-3.0.3" name="actionpack" version="3.0.3" timestamp="1292707628000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Web-flow and rendering framework putting the VC in MVC (part of Rails).</summary>
          </additional_info>
          <dependency name="builder" version="2.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="erubis" version="2.6.6" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rack-mount" version="0.6.13" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rack-test" version="0.5.6" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="tzinfo" version="0.3.23" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="i18n" version="0.4" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activemodel" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rack" version="1.2.1" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rspec-expectations-2.3.0" name="rspec-expectations" version="2.3.0" timestamp="1292707896000" parser_version="9" git="false">
          <additional_info authors="David Chelimsky, Chad Humphries" email="dchelimsky@gmail.com;chad.humphries@gmail.com" homepage="http://github.com/rspec/rspec-expectations">
            <summary>rspec-expectations-2.3.0</summary>
          </additional_info>
          <dependency name="diff-lcs" version="1.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/selenium-webdriver-0.1.1" name="selenium-webdriver" version="0.1.1" timestamp="1292707845000" parser_version="9" git="false">
          <additional_info authors="Jari Bakken" email="jari.bakken@gmail.com" homepage="http://selenium.googlecode.com">
            <summary>The next generation developer focused tool for automated testing of webapps</summary>
          </additional_info>
          <dependency name="rubyzip" version="0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="json_pure" version="0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="childprocess" version="0.1.4" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="ffi" version="0.6.3" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[= selenium-webdriver

This gem provides Ruby bindings for WebDriver and has been tested to work on MRI (1.8.6 through 1.9), JRuby and Rubinius.

= INSTALL

gem install selenium-webdriver

= LINKS

* http://gemcutter.org/gems/selenium-webdriver
* http://selenium.googlecode.com/svn/trunk/docs/api/rb/index.html
* http://code.google.com/p/selenium/wiki/RubyBindings
* http://code.google.com/p/selenium/issues/list

= LICENSE

Copyright 2009-2010 WebDriver committers

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rails-3.0.3" name="rails" version="3.0.3" timestamp="1292707633000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Full-stack web application framework.</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="activerecord" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="bundler" version="1.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="railties" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="activeresource" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="actionpack" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="actionmailer" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/thor-0.14.6" name="thor" version="0.14.6" timestamp="1292707631000" parser_version="9" git="false">
          <additional_info authors="Yehuda Katz, JosÃ© Valim" email="ruby-thor@googlegroups.com" homepage="http://github.com/wycats/thor">
            <summary>A scripting framework that replaces rake, sake and rubigen</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/to-csv-1.0.3" name="to-csv" version="1.0.3" timestamp="1293399047000" parser_version="9" git="false">
          <additional_info authors="Ãcaro Leopoldino da Motta" email="icaro.ldm@gmail.com" homepage="http://github.com/ilmotta/to-csv">
            <summary>Convert arrays to CSV (array of hashes, matrixes, ActiveRecord objects etc).</summary>
          </additional_info>
          <dependency name="activesupport" version="2.3.5" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[= ToCSV


ToCSV is a gem for converting arrays or scopes (Rails) to CSV by calling +to_csv+.
These arrays can contain different data structures, as long as they are homogeneous, like the ones
described below:

* A simple array of anything that responds to <tt>to_s</tt>: <tt>['Date', Time.now].to_csv</tt>
* An array of hashes: <tt>[ {'Name' => 'Icaro', 'Age' => 23}, {'Name' => 'Gabriel', 'Age' => 16} ].to_csv</tt>
* A matrix: <tt>[['Name', 'Age'], ['Icaro', 23], ['Gabriel', 16]].to_csv</tt>
* A hash like array: <tt>[ [['Name', 'Icaro'], ['Age', 23]], [['Name', 'Gabriel'], ['Age', 16]] ].to_csv</tt>
* An array of ActiveRecord objects: <tt>@users.to_csv(:except => [:password, :phone], :timestamps => true)</tt>
* Scopes in Rails


=== Requirements

ToCSV has been tested with Ruby 1.8.7-p299/1.9.1-p378/1.9.2-rc1.

If you are using Ruby 1.9 the only dependency to use the basic features is +ActiveSupport+.
Otherwise you will need +fastercsv+. You will receive a warning if you don't meet the requirements.

  # If you don't have Rails installed...
  $ sudo gem install activesupport

  # And if your Ruby version is lower than 1.9
  $ sudo gem install fastercsv
  
Full compatibility with Rails 3 is on the way...as well as a new API, with new features.


=== Configuration

  If you want to use this gem with Rails, put the following requirement in your environment.rb:

  config.gem 'to-csv', :lib => 'to_csv', :source => 'http://rubygems.org'

After that, if you need to globally configure the gem, just create a <i>to_csv.rb</i> file in <i>initializers</i>.

  ToCSV.byte_order_marker = true
  ToCSV.timestamps        = true
  ToCSV.locale            = 'en-US'
  ToCSV.primary_key       = false
  ToCSV.csv_options[:col_sep] = ','
  ToCSV.csv_options[:row_sep] = "\r\n"


== Examples

Let's start with the most simple example.

  ['Alfred Hitchcock', 'Robert Mitchum', 'Lucille Ball'].to_csv
  #=> "Alfred Hitchcock;Robert Mitchum;Lucille Ball\n"


Or, if we have an array of arrays (i.e. a matrix) we can create tabular data.
  [
    ['Name', 'Gender'],
    ['Alfred',  'M'],
    ['Robert',  'M'],
    ['Lucille', 'F']
  ].to_csv #=> "Name;Gender\nAlfred;M\nRobert;M\nLucille;F\n"


Almost always, when we generate CSV files, we want it to have appropriate
headers, so a better approach might be to use an array of hashes.

  [
    { 'Name' => 'Alfred',  'Gender' => 'M' },
    { 'Name' => 'Robert',  'Gender' => 'M' },
    { 'Name' => 'Lucille', 'Gender' => 'F' }
  ].to_csv #=> "Gender;Name\nM;Alfred\nM;Robert\nF;Lucille\n"


Look carefully to the above output. You can see that when we use hashes we can
no longer be sure of the headers' order (true for Ruby versions older than 1.9).
When we are working with tabular data the headers' order can be very important,
thus we can use a somewhat similar data structure:

  [
    [ ['Name', 'Alfred'],  ['Gender', 'M'] ],
    [ ['Name', 'Robert'],  ['Gender', 'M'] ],
    [ ['Name', 'Lucille'], ['Gender', 'F'] ]
  ].to_csv #=> "Name;Gender\nAlfred;M\nRobert;M\nLucille;F\n"

That's a lot to type... The first example was much simpler...

There is the <tt>headers</tt> option. You can use it in all the examples above
to enable/disable headers from the output. Default is to show (true).

  users = [{ 'Name' => 'Alfred',  'Gender' => 'M' }]
  users.to_csv(:headers => false)


==== Active Record Objects

When we're building our data like the previous examples we have very few options
compared to what can be passed when converting an array of AR objects. Again,
the easiest way:

  # Anywhere in your app.
  # By default, all available model attributes (DB columns) are going to be used
  # except timestamps and the primary key of the record
  @users = User.all
  File.open('path/to/file.csv', 'w') { |io| io.puts @users.to_csv }


==== Headers

You can control the order and the text of any header. You can accomplish that
in various ways.

By default all attribute/method names will be sorted in alphabetical order. So
imagine a person model have +name+, +age+ and +email+ as attributes, and you
want to get the following output:

  Name | E-mail | Age
  ...  | ...    | ..
  ...  | ...    | ..

You can tell <i>to-csv</i> to use a specific locale. If you don't, it uses
your app current locale. It will try to translate attributes to a
more friendly text by using the scope <tt>activerecord.attributes.<model name></tt>.
If the translation doesn't exist the header's text is going to be humanized.

The order of columns can be changed with the option +headers+. The way this
option works is very similar to the <tt>plugins</tt> method in your Rails
<i>environment.rb</i> file.

* If you pass +nil+ (default) then headers/columns will be in alphabetical order.
* If you pass an empty array or +false+, no headers will be shown.
* Instead, if you pass a non empty array, headers will be sorted in the order specified. <tt>:all</tt> can be used as a placeholder for all attributes not explicitly named.

So, in our example above, we can say:

  @users.to_csv(:headers => [:name, :email, :age])

Or, using the placeholder +all+, which is not very useful here:

  @users.to_csv(:headers => [:name, :email, :all])

If you want a completely different result you could, for instance, map all
users to a hash. Example:

  # This makes use of a hash to completely change the CSV output.
  @users.map do |user|
    {
      'Name' => user.name,
      'Age'  => user.age,
      'Total Comments' => user.comments.count
    }
  end.to_csv


==== Passing a Block

Sometimes you may want to change just one value out of six for example. The best
way to go is to pass a block so that you don't have to repeat yourself writing
five headers and it's obvious values and also loosing I18n header translations.

  # The block yields a new Struct for each object in the list. By calling
  # methods on this struct you can change their default values.
  @users.to_csv do |row, user|
    row.date_of_birth = user.date_of_birth.to_s(:long)
  end

==== Include Relationships

If you have an AR object with many relationships and you want to include these to
CSV results, you can use :include option.

Examples:

  # If you want to include a <tt>has_many</tt> relationship, you can do the following:
  User.all.to_csv(:include => :posts)

  # If you want to include a <tt>belongs_to</tt> relationship:
  User.all.to_csv(:include => :organization)

  # Or you can use both in the same time.
  User.all.to_csv(:include => [:organization, :posts])

==== A More Complete Example

  # users/index.html.haml
  = link_to 'export (CSV)', users_url(:csv)

  # UsersController#index
  class UsersController < ApplicationController
    def index
      @users = User.most_active
      respond_to do |format|
        format.html
        format.csv do
          send_data User.csv(@users), :filename => 'users_report.csv'
        end
      end
    end
  end
  
  # User model
  class User < ActiveRecord::Base
    def self.csv(users)
      users.csv(:headers => [:id, :all], :primary_key => true, :except => :password) do |row, user|
        row.id = "%04d" % user.id
        row.created_at = I18n.l(user.created_at, :format => :default)
      end
    end
  end
  
  # locales/en-US.yml
  activerecord:
    attributes:
      user:
        id: Code

==== Full Customization

You can always customize the output if you wish by building arrays of hashes,
arrays of arrays of bidimensional arrays etc :). Or you can obviously mix
anything you want and even use FasterCSV directly.

  @user.to_csv { :only => [:name, :email] }, :col_sep => ','

There are other options for you to customize the output. Take a look at the
<tt>to_csv</tt> method documentation.

==== Credits

Special thanks to these people for their contributions and/or ideas:

* {Kyle J. Ginavan}[http://github.com/kylejginavan]
* {Mauro Torres}[http://github.com/chebyte]
* {petRUShka}[http://github.com/petRUShka]

Copyright (c) 2010 Ãcaro Leopoldino da Motta, released under the MIT license.

]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/linecache19-0.5.11" name="linecache19" version="0.5.11" timestamp="1292708827000" parser_version="9" git="false">
          <additional_info authors="R. Bernstein, Mark Moseley" email="mark@fast-software.com" homepage="http://rubyforge.org/projects/ruby-debug19">
            <summary>Read file with caching</summary>
          </additional_info>
          <dependency name="ruby_core_source" version="0.1.4" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/builder-2.1.2" name="builder" version="2.1.2" timestamp="1292707624000" parser_version="9" git="false">
          <additional_info authors="Jim Weirich" email="jim@weirichhouse.org" homepage="http://onestepback.org">
            <summary>Builders for MarkUp.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/columnize-0.3.2" name="columnize" version="0.3.2" timestamp="1292708825000" parser_version="9" git="false">
          <additional_info authors="R. Bernstein" email="rockyb@rubyforge.net" homepage="http://rubyforge.org/projects/rocky-hacks/columnize">
            <summary>Module to format an Array as an Array of String aligned in columns</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/term-ansicolor-1.0.5" name="term-ansicolor" version="1.0.5" timestamp="1292707849000" parser_version="9" git="false">
          <additional_info authors="Florian Frank" email="flori@ping.de" homepage="http://flori.github.com/term-ansicolor">
            <summary>Ruby library that colors strings using ANSI escape sequences</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rack-1.2.1" name="rack" version="1.2.1" timestamp="1292707625000" parser_version="9" git="false">
          <additional_info authors="Christian Neukirchen" email="chneukirchen@gmail.com" homepage="http://rack.rubyforge.org">
            <summary>a modular Ruby webserver interface</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/arel-2.0.6" name="arel" version="2.0.6" timestamp="1292707629000" parser_version="9" git="false">
          <additional_info authors="Aaron Patterson, Bryan Halmkamp, Emilio Tagua, Nick Kallen" email="aaron@tenderlovemaking.com, bryan@brynary.com, miloops@gmail.com, nick@example.org" homepage="http://github.com/rails/arel">
            <summary>Arel is a Relational Algebra for Ruby</summary>
          </additional_info>
          <readme xml:space="preserve"><![CDATA[# ARel

* http://github.com/rails/arel

## DESCRIPTION

Arel is a Relational Algebra for Ruby. It 1) simplifies the generation complex of SQL queries and it 2) adapts to various RDBMS systems. It is intended to be a framework framework; that is, you can build your own ORM with it, focusing on innovative object and collection modeling as opposed to database compatibility and query generation.

## Status

For the moment, Arel uses ActiveRecord's connection adapters to connect to the various engines, connection pooling, perform quoting, and do type conversion.

## A Gentle Introduction

Generating a query with ARel is simple. For example, in order to produce

    SELECT * FROM users

you construct a table relation and convert it to sql:

    users = Arel::Table.new(:users)
    users.project(Arel.sql('*'))
    users.to_sql

### More Sophisticated Queries

Here is a whirlwind tour through the most common relational operators. These will probably cover 80% of all interaction with the database.

First is the 'restriction' operator, `where`:

    users.where(users[:name].eq('amy'))
    # => SELECT * FROM users WHERE users.name = 'amy'

What would, in SQL, be part of the `SELECT` clause is called in Arel a `projection`:

    users.project(users[:id]) # => SELECT users.id FROM users

Joins resemble SQL strongly:

    users.join(photos).on(users[:id].eq(photos[:user_id]))
    # => SELECT * FROM users INNER JOIN photos ON users.id = photos.user_id

What are called `LIMIT` and `OFFSET` in SQL are called `take` and `skip` in Arel:

    users.take(5) # => SELECT * FROM users LIMIT 5
    users.skip(4) # => SELECT * FROM users OFFSET 4

`GROUP BY` is called `group`:

    users.group(users[:name]) # => SELECT * FROM users GROUP BY name

The best property of the Relational Algebra is its "composability", or closure under all operations. For example, to restrict AND project, just "chain" the method invocations:

    users                                 \
      .where(users[:name].eq('amy'))      \
      .project(users[:id])                \
    # => SELECT users.id FROM users WHERE users.name = 'amy'

All operators are chainable in this way, and they are chainable any number of times, in any order.

    users.where(users[:name].eq('bob')).where(users[:age].lt(25))

Of course, many of the operators take multiple arguments, so the last example can be written more tersely:

    users.where(users[:name].eq('bob'), users[:age].lt(25))

The `OR` operator works like this:

    users.where(users[:name].eq('bob').or(users[:age].lt(25)))

The `AND` operator behaves similarly.

### The Crazy Features

The examples above are fairly simple and other libraries match or come close to matching the expressiveness of Arel (e.g., `Sequel` in Ruby).

#### Complex Joins

Where Arel really shines in its ability to handle complex joins and aggregations. As a first example, let's consider an "adjacency list", a tree represented in a table. Suppose we have a table `comments`, representing a threaded discussion:

    comments = Arel::Table.new(:comments)

And this table has the following attributes:

    comments.columns # => [comments[:id], comments[:body], comments[:parent_id]]

The `parent_id` column is a foreign key from the `comments` table to itself. Now, joining a table to itself requires aliasing in SQL. In fact, you may alias in Arel as well:

    replies = comments.alias
    comments_with_replies = \
      comments.join(replies).on(replies[:parent_id].eq(comments[:id]))
    # => SELECT * FROM comments INNER JOIN comments AS comments_2 WHERE comments_2.parent_id = comments.id

This will return the first comment's reply's body.
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rspec-2.3.0" name="rspec" version="2.3.0" timestamp="1292707897000" parser_version="9" git="false">
          <additional_info authors="David Chelimsky, Chad Humphries" email="dchelimsky@gmail.com;chad.humphries@gmail.com" homepage="http://github.com/rspec/rspec">
            <summary>rspec-2.3.0</summary>
          </additional_info>
          <dependency name="rspec-mocks" version="2.3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rspec-core" version="2.3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rspec-expectations" version="2.3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[# RSpec-2

Behaviour Driven Development for Ruby

# Description

rspec-2.x is a meta-gem, which depends on the rspec-core, rspec-expectations
and rspec-mocks gems. Each of these can be installed separately and actived in
isolation with the `gem` command. Among other benefits, this allows you to use
rspec-expectations, for example, in Test::Unit::TestCase if you happen to
prefer that style.

Conversely, if you like RSpec's approach to declaring example groups and
examples (`describe` and `it`) but prefer Test::Unit assertions and mocha, rr
or flexmock for mocking, you'll be able to do that without having to load the
components of rspec that you're not using.

## Documentation

### rspec-core

* [Cucumber features](http://relishapp.com/rspec/rspec-core/v/2-0)
* [RDoc](http://rubydoc.info/gems/rspec-core/2.0.1/frames)

### rspec-expectations

* [Cucumber features](http://relishapp.com/rspec/rspec-expectations/v/2-0)
* [RDoc](http://rubydoc.info/gems/rspec-expectations/2.0.1/frames)

### rspec-mocks

* [Cucumber features](http://relishapp.com/rspec/rspec-mocks/v/2-0)
* [RDoc](http://rubydoc.info/gems/rspec-mocks/2.0.1/frames)

## Install

    gem install rspec

## Contribute

* [http://github.com/rspec/rspec-dev](http://github.com/rspec/rspec-dev)

## Also see

* [http://github.com/rspec/rspec-core](http://github.com/rspec/rspec-core)
* [http://github.com/rspec/rspec-expectations](http://github.com/rspec/rspec-expectations)
* [http://github.com/rspec/rspec-mocks](http://github.com/rspec/rspec-mocks)
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/gherkin-2.3.2" name="gherkin" version="2.3.2" timestamp="1292707871000" parser_version="9" git="false">
          <additional_info authors="Mike Sassak, Gregory Hnatiuk, Aslak HellesÃ¸y" email="cukes@googlegroups.com" homepage="http://github.com/aslakhellesoy/gherkin">
            <summary>gherkin-2.3.2</summary>
          </additional_info>
          <dependency name="term-ansicolor" version="1.0.5" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="json" version="1.4.6" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[= Gherkin

Fast Gherkin lexer and parser based on Ragel. Gherkin is two things:

* The language that has evolved out of the Cucumber project.
* This library

Supported platforms:

* Ruby 1.8.6-1.9.2 (MRI, JRuby, REE, Rubinius)
* Pure Java
* .NET
* IronRuby (experimental)
* Javascript (coming soon)

== Installing the toolchain

Due to the cross-platform nature of this library, you have to install a lot of tools to build gherkin yourself.
In order to make it easier for occasional contributors to get the development environment up and running, you don't
have to install everything up front. The build scripts should tell you if you are missing something. For example,
you shouldn't have to install MinGW to build windows binaries if you are a Linux user and just want to fix a bug in
the C code.

=== Common dependencies

These are the minimal tools you need to install, even if you are building non-Ruby packages.

* Ragel (brew install ragel or apt-get install ragel)
* Ruby (any version should do).
* A clone of the cucumber git repo to a "cucumber" sibling folder of your gherkin folder. (Only needed to run cucumber tests)
* RVM (you may not need this if you are only building for a single platform)

With this minimal toolchain installed, install Ruby gems needed by the build:

  gem install bundler
  bundle install

Running RSpec and Cucumber tests

  rake clean spec cucumber

If the RL_LANGS environment variable is set, only the parsers for the languages specified there will be built.
E.g. in Bash, export RL_LANGS="en,fr,no". This can be quite helpful when modifying the Ragel grammar.

See subsections for building for a specific platform.

=== MRI, REE or Rubinius

You'll need GCC installed.

Build the gem with:

  rake build

=== Pure Java and JRuby

You must install JRuby to build the pure Java jar or the JRuby gem:

  rvm install jruby
  rvm use jruby
  rvm gemset create cucumber
  rvm use @cucumber
  gem install bundler
  bundle install

Now you can build the jar with:

  rake clean jar

=== .NET and IronRuby

You must install Mono and IKVM to build the pure .NET dll and the IronRuby gem:

* Install Mono from http://www.mono-project.com/ and make sure it's on your $PATH
* Download IKVM from http://www.ikvm.net/ and extract it to /usr/local/ikvm so that you have a /usr/local/ikvm/bin/ikvmc.exe

Now you can build the .NET dll with:

  rake ikvm

=== MinGW Rubies (for Windows gems)

You must install MinGW rubies to build gems fow Windows.
First you need to download and install MinGW:

OS X users can get it from http://crossgcc.rts-software.org/doku.php
Once you have installed it, add this to your .bashrc:

  export PATH=$PATH:/usr/local/i386-mingw32-4.3.0/bin

Now, let's install some rubies.
Make sure you have openssl installed first.

  brew install openssl

  # 1.8.6
  # Don't worry about inconsistent patchlevels here. It works.
  rvm install 1.8.6-p399
  rvm use 1.8.6-p399
  rvm gemset create cucumber
  rvm use @cucumber
  gem install bundler
  bundle install
  rake-compiler cross-ruby VERSION=1.8.6-p287

  # 1.9.1
  # Later 1.9.1 patch levels or 1.9.2 don't compile on mingw.
  # The compiled binaries should still work on 1.9.2
  rvm install 1.9.1-p243
  rvm use 1.9.1-p243
  rvm gemset create cucumber
  rvm use @cucumber
  gem install bundler
  bundle install
  rake-compiler cross-ruby VERSION=1.9.1-p243

== Release process

* Bump version in the VERSION file and:
** java/pom.xml
** ikvm/Gherkin/Gherkin.csproj
* Commit changes.
* rake gems:prepare && ./build_native_gems.sh && rake release:ALL
* Announce on Cucumber list, IRC and Twitter.

== Configuring Rake-Compiler for cross compilation
In order to build Windows binaries (so we can release Windows gems from OS X/Linux) we need to set up rake-compiler.

http://github.com/luislavena/rake-compiler/

I didn't want to install macports (I'm on homebrew) and I couldn't figure out how to build MinGW myself. I got prebuilt binaries (version 4.3.0):
http://crossgcc.rts-software.org/doku.php - just add the bin folder to your PATH

== Note on Patches/Pull Requests
 
* Fork the project.
* Run rake ragel:rb to generate all the I18n lexers
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with Rakefile, VERSION, or History.txt.
  (if you want to have your own version, that is fine but
   bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2009-2010 Mike Sassak, Gregory Hnatiuk, Aslak HellesÃ¸y. See LICENSE for details.
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/xpath-0.1.2" name="xpath" version="0.1.2" timestamp="1292707845000" parser_version="9" git="false">
          <additional_info authors="Jonas Nicklas" email="jonas.nicklas@gmail.com" homepage="http://github.com/jnicklas/xpath">
            <summary>Generate XPath expressions from Ruby</summary>
          </additional_info>
          <dependency name="nokogiri" version="1.3" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/ruby_core_source-0.1.4" name="ruby_core_source" version="0.1.4" timestamp="1292708826000" parser_version="9" git="false">
          <additional_info authors="Mark Moseley" email="mark@fast-software.com" homepage="http://github.com/mark-moseley/ruby_core_source">
            <summary>Retrieve Ruby core source files</summary>
          </additional_info>
          <dependency name="archive-tar-minitar" version="0.5.2" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/erubis-2.6.6" name="erubis" version="2.6.6" timestamp="1292707628000" parser_version="9" git="false">
          <additional_info authors="makoto kuwata" email="kwa(at)kuwata-lab.com" homepage="http://www.kuwata-lab.com/erubis/">
            <summary>a fast and extensible eRuby implementation which supports multi-language</summary>
          </additional_info>
          <dependency name="abstract" version="1.0.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rspec-mocks-2.3.0" name="rspec-mocks" version="2.3.0" timestamp="1292707897000" parser_version="9" git="false">
          <additional_info authors="David Chelimsky, Chad Humphries" email="dchelimsky@gmail.com;chad.humphries@gmail.com" homepage="http://github.com/rspec/rspec-mocks">
            <summary>rspec-mocks-2.3.0</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/haml-rails-0.3.4" name="haml-rails" version="0.3.4" timestamp="1292707893000" parser_version="9" git="false">
          <additional_info authors="AndrÃ© Arko" email="andre@arko.net" homepage="http://github.com/indirect/haml-rails">
            <summary>let your Gemfile do the configuring</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="railties" version="3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="haml" version="3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="actionpack" version="3.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <readme xml:space="preserve"><![CDATA[# Haml-rails

Haml-rails provides Haml generators for Rails 3. It also enables Haml as the templating engine for you, so you don't have to screw around in your own application.rb when your Gemfile already clearly indicated what templating engine you have installed. Hurrah.

To use it, add this line to your Gemfile:

    gem "haml-rails"

Pretty fancy, eh?

Once you've done that, any time you generate a controller or scaffold, you'll get Haml instead of ERB templates. On top of that, when your Rails application loads, Haml will be loaded and initialized completely automatically! The modern world is just so amazing.

### Contributors

Haml generators originally from [rails3-generators](http://github.com/indirect/rails3-generators), and written by Paul Barry, Anuj Dutta, Louis T, and Chris Rhoden. Tests originally written by Louis T.]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/polyglot-0.3.1" name="polyglot" version="0.3.1" timestamp="1292707630000" parser_version="9" git="false">
          <additional_info authors="Clifford Heath" email="cjheath@rubyforge.org" homepage="http://polyglot.rubyforge.org">
            <summary>Allows custom language loaders for specified file extensions to be hooked into require</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/ruby-debug-base19-0.11.24" name="ruby-debug-base19" version="0.11.24" timestamp="1292708830000" parser_version="9" git="false">
          <additional_info authors="Kent Sibilev, Mark Moseley" email="mark@fast-software.com" homepage="http://rubyforge.org/projects/ruby-debug19/">
            <summary>Fast Ruby debugger - core component</summary>
          </additional_info>
          <dependency name="ruby_core_source" version="0.1.4" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="columnize" version="0.3.1" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="linecache19" version="0.5.11" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/culerity-0.2.12" name="culerity" version="0.2.12" timestamp="1292707820000" parser_version="9" git="false">
          <additional_info authors="Alexander Lang" email="alex@upstream-berlin.com" homepage="http://github.com/langalex/culerity">
            <summary>Culerity integrates Cucumber and Celerity in order to test your application's full stack.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/haml-3.0.25" name="haml" version="3.0.25" timestamp="1292707893000" parser_version="9" git="false">
          <additional_info authors="Nathan Weizenbaum, Chris Eppstein, Hampton Catlin" email="haml@googlegroups.com" homepage="http://haml-lang.com/">
            <summary>An elegant, structured XHTML/XML templating engine. Comes with Sass, a similar CSS templating engine.</summary>
          </additional_info>
          <readme xml:space="preserve"><![CDATA[# Haml and Sass

Haml and Sass are templating engines
for the two most common types of documents on the web:
HTML and CSS, respectively.
They are designed to make it both easier and more pleasant
to code HTML and CSS documents,
by eliminating redundancy,
reflecting the underlying structure that the document represents,
and providing elegant, easily understandable, and powerful syntax.

## Using

Haml and Sass can be used from the command line
or as part of a Ruby web framework.
The first step is to install the gem:

    gem install haml

After you convert some HTML to Haml or some CSS to Sass,
you can run

    haml document.haml
    sass style.scss

to compile them.
For more information on these commands, check out

    haml --help
    sass --help

To install Haml and Sass in Rails 2,
just add `config.gem "haml"` to `config/environment.rb`.
In Rails 3, add `gem "haml"` to your Gemfile instead.
and both Haml and Sass will be installed.
Views with the `.html.haml` extension will automatically use Haml.
Sass is a little more complicated;
`.sass` files should be placed in `public/stylesheets/sass`,
where they'll be automatically compiled
to corresponding CSS files in `public/stylesheets` when needed
(the Sass template directory is customizable...
see [the Sass reference](http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#template_location-option) for details).

For Merb, `.html.haml` views will work without any further modification.
To enable Sass, you also need to add a dependency.
To do so, just add

    dependency "merb-haml"

to `config/dependencies.rb` (or `config/init.rb` in a flat/very flat Merb application).
Then it'll work just like it does in Rails.

Sass can also be used with any Rack-enabled web framework.
To do so, just add

    require 'sass/plugin/rack'
    use Sass::Plugin::Rack

to `config.ru`.
Then any Sass files in `public/stylesheets/sass`
will be compiled CSS files in `public/stylesheets` on every request.

To use Haml and Sass programatically,
check out the [YARD documentation](http://haml-lang.com/docs/yardoc/).

## Formatting

### Haml

The most basic element of Haml
is a shorthand for creating HTML:

    %tagname{:attr1 => 'value1', :attr2 => 'value2'} Contents

No end-tag is needed; Haml handles that automatically.
If you prefer HTML-style attributes, you can also use:

    %tagname(attr1='value1' attr2='value2') Contents

Adding `class` and `id` attributes is even easier.
Haml uses the same syntax as the CSS that styles the document:

    %tagname#id.class

In fact, when you're using the `<div>` tag,
it becomes _even easier_.
Because `<div>` is such a common element,
a tag without a name defaults to a div. So

    #foo Hello!

becomes

    <div id='foo'>Hello!</div>

Haml uses indentation
to bring the individual elements to represent the HTML structure.
A tag's children are indented beneath than the parent tag.
Again, a closing tag is automatically added.
For example:

    %ul
      %li Salt
      %li Pepper

becomes:

    <ul>
      <li>Salt</li>
      <li>Pepper</li>
    </ul>

You can also put plain text as a child of an element:

    %p
      Hello,
      World!

It's also possible to embed Ruby code into Haml documents.
An equals sign, `=`, will output the result of the code.
A hyphen, `-`, will run the code but not output the result.
You can even use control statements
like `if` and `while`:

    %p
      Date/Time:
      - now = DateTime.now
      %strong= now
      - if now > DateTime.parse("December 31, 2006")
        = "Happy new " + "year!"

Haml provides far more tools than those presented here.
Check out the [reference documentation](http://beta.haml-lang.com/docs/yardoc/file.HAML_REFERENCE.html)
for full details.

#### Indentation

Haml's indentation can be made up of one or more tabs or spaces.
However, indentation must be consistent within a given document.
Hard tabs and spaces can't be mixed,
and the same number of tabs or spaces must be used throughout.

### Sass

Sass is an extension of CSS
that adds power and elegance to the basic language.
It allows you to use [variables][vars], [nested rules][nested],
[mixins][mixins], [inline imports][imports],
and more, all with a fully CSS-compatible syntax.
Sass helps keep large stylesheets well-organized,
and get small stylesheets up and running quickly,
particularly with the help of
[the Compass style library](http://compass-style.org).

[vars]:    http://beta.sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#variables_
[nested]:  http://beta.sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#nested_rules_
[mixins]:  http://beta.sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#mixins
[imports]: http://beta.sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#import

Sass has two syntaxes.
The one presented here, known as "SCSS" (for "Sassy CSS"),
is fully CSS-compatible.
The other (older) syntax, known as the indented syntax or just "Sass",
is whitespace-sensitive and indentation-based.
For more information, see the [reference documentation][syntax].

[syntax]: http://beta.sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#syntax

To run the following examples and see the CSS they produce,
put them in a file called `test.scss` and run `sass test.scss`.

#### Nesting

Sass avoids repetition by nesting selectors within one another.
The same thing works for properties.

    table.hl {
      margin: 2em 0;
      td.ln { text-align: right; }
    }

    li {
      font: {
        family: serif;
        weight: bold;
        size: 1.2em;
      }
    }

#### Variables

Use the same color all over the place?
Need to do some math with height and width and text size?
Sass supports variables, math operations, and many useful functions.

    $blue: #3bbfce;
    $margin: 16px;

    .content_navigation {
      border-color: $blue;
      color: darken($blue, 10%);
    }

    .border {
      padding: $margin / 2;
      margin: $margin / 2;
      border-color: $blue;
    }

#### Mixins

Even more powerful than variables,
mixins allow you to re-use whole chunks of CSS,
properties or selectors.
You can even give them arguments. 

    @mixin table-scaffolding {
      th {
        text-align: center;
        font-weight: bold;
      }
      td, th { padding: 2px; }
    }

    @mixin left($dist) {
      float: left;
      margin-left: $dist;
    }

    #data {
      @include left(10px);
      @include table-scaffolding;
    }

A comprehensive list of features is available
in the [Sass reference](http://beta.sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html).

## Executables

The Haml gem includes several executables that are useful
for dealing with Haml and Sass from the command line.

### `haml`

The `haml` executable transforms a source Haml file into HTML.
See `haml --help` for further information and options.

### `sass`

The `sass` executable transforms a source Sass file into CSS.
See `sass --help` for further information and options.

### `html2haml`

The `html2haml` executable attempts to transform HTML,
optionally with ERB markup, into Haml code.
Since HTML is so variable, this transformation is not always perfect;
it's a good idea to have a human check the output of this tool.
See `html2haml --help` for further information and options.

### `sass-convert`

The `sass-convert` executable converts between CSS, Sass, and SCSS.
When converting from CSS to Sass or SCSS,
nesting is applied where appropriate.
See `sass-convert --help` for further information and options.

## Authors

Haml and Sass were created by [Hampton Catlin](http://hamptoncatlin.com)
(hcatlin) and he is the author of the original implementation. However, Hampton
doesn't even know his way around the code anymore and now occasionally consults
on the language issues.  Hampton lives in Jacksonville, Florida and is the lead
mobile developer for Wikimedia.

[Nathan Weizenbaum](http://nex-3.com) is the primary developer and architect of
the "modern" Ruby implementation of Haml. His hard work has kept the project
alive by endlessly answering forum posts, fixing bugs, refactoring, finding
speed improvements, writing documentation, implementing new features, and
getting Hampton coffee (a fitting task for a boy-genius). Nathan lives in
Seattle, Washington and while not being a student at the University of
Washington or working at an internship, he consults for Unspace Interactive.

[Chris Eppstein](http://acts-as-architect.blogspot.com) is a core contributor to
Sass and the creator of Compass, the first Sass-based framework. Chris focuses
on making Sass more powerful, easy to use, and on ways to speed its adoption
through the web development community. Chris lives in San Jose, California with
his wife and daughter. He is the Software Architect for
[Caring.com](http://caring.com), a website devoted to the 34 Million caregivers
whose parents are sick or elderly, that uses Haml and Sass.

If you use this software, you must pay Hampton a compliment. And
buy Nathan some jelly beans. Maybe pet a kitten. Yeah. Pet that kitty.

Some of the work on Haml was supported by Unspace Interactive.

Beyond that, the implementation is licensed under the MIT License.
Okay, fine, I guess that means compliments aren't __required__.
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/bundler-1.0.7" name="bundler" version="1.0.7" timestamp="1292707633000" parser_version="9" git="false">
          <additional_info authors="Carl Lerche, Yehuda Katz, AndrÃ© Arko" email="carlhuda@engineyard.com" homepage="http://gembundler.com">
            <summary>The best way to manage your application's dependencies</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/bcrypt-ruby-2.1.2" name="bcrypt-ruby" version="2.1.2" timestamp="1292707816000" parser_version="9" git="false">
          <additional_info authors="Coda Hale" email="coda.hale@gmail.com" homepage="http://bcrypt-ruby.rubyforge.org">
            <summary>OpenBSD's bcrypt() password hashing algorithm.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/activesupport-3.0.3" name="activesupport" version="3.0.3" timestamp="1292707623000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>A toolkit of support libraries and Ruby core extensions extracted from the Rails framework.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/actionmailer-3.0.3" name="actionmailer" version="3.0.3" timestamp="1292707631000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Email composition, delivery, and receiving framework (part of Rails).</summary>
          </additional_info>
          <dependency name="actionpack" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="mail" version="2.2.9" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rack-mount-0.6.13" name="rack-mount" version="0.6.13" timestamp="1292707625000" parser_version="9" git="false">
          <additional_info authors="Joshua Peek" email="josh@joshpeek.com" homepage="http://github.com/josh/rack-mount">
            <summary>Stackable dynamic tree based Rack router</summary>
          </additional_info>
          <dependency name="rack" version="1.0.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rubyzip-0.9.4" name="rubyzip" version="0.9.4" timestamp="1292707844000" parser_version="9" git="false">
          <additional_info authors="Thomas Sondergaard" email="thomas(at)sondergaard.cc" homepage="http://rubyzip.sourceforge.net/">
            <summary>rubyzip is a ruby module for reading and writing zip files</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems/rspec-core-2.3.1" name="rspec-core" version="2.3.1" timestamp="1292707895000" parser_version="9" git="false">
          <additional_info authors="Chad Humphries, David Chelimsky" email="dchelimsky@gmail.com;chad.humphries@gmail.com" homepage="http://github.com/rspec/rspec-core">
            <summary>rspec-core-2.3.1</summary>
          </additional_info>
          <readme xml:space="preserve"><![CDATA[# RSpec Core

Behaviour Driven Development for Ruby

## Documentation

The [Cucumber features](http://relishapp.com/rspec/rspec-core) are the
most comprehensive and up-to-date docs for end-users.

The [RDoc](http://rubydoc.info/gems/rspec-core/2.3.0/frames) provides
additional information for contributors and/or extenders.

All of the documentation is open source and a work in progress. If you find it
lacking or confusing, you can help improve it by submitting requests and
patches to the [rspec-core issue
tracker](https://github.com/rspec/rspec-core/issues).

## Install

    gem install rspec      # for rspec-core, rspec-expectations, rspec-mocks
    gem install rspec-core # for rspec-core only

## Upgrading from rspec-1.x

See [Upgrade.markdown](http://github.com/rspec/rspec-core/blob/master/Upgrade.markdown)


This will install the rspec, rspec-core, rspec-expectations and rspec-mocks
gems.

## Get Started

Start with a simple example of behavior you expect from your system. Do
this before you write any implementation code:

    # in spec/calculator_spec.rb
    describe Calculator, "add" do
      it "returns the sum of its arguments" do
        Calculator.new.add(1, 2).should eq(3)
      end
    end

Run this with the rspec command, and watch it fail:

    $ rspec spec/calculator_spec.rb
    ./spec/calculator_spec.rb:1: uninitialized constant Calculator

Implement the simplest solution:

    # in lib/calculator.rb
    class Calculator
      def add(a,b)
        a + b
      end
    end

Be sure to require the implementation file in the spec:

    # in spec/calculator_spec.rb
    # - RSpec adds ./lib to the $LOAD_PATH, so you can
    #   just require "calculator" directly
    require "calculator"

Now run the spec again, and watch it pass:

    $ rspec spec/calculator_spec.rb
    .

    Finished in 0.000315 seconds
    1 example, 0 failures

Use the documentation formatter to see the resulting spec:

    $ rspec spec/calculator_spec.rb --format doc
    Calculator add
      returns the sum of its arguments

    Finished in 0.000379 seconds
    1 example, 0 failures

## Known issues

See [http://github.com/rspec/rspec-core/issues](http://github.com/rspec/rspec-core/issues)

## Learn more

While not comprehensive yet, you can learn quite a lot from the Cucumber
features in the [features
directory](http://github.com/rspec/rspec-core/tree/master/features/).  If there
is a feature that is not documented there, or you find them insufficient to
understand how to use a feature, please submit issues to
[http://github.com/rspec/rspec-core/issues](http://github.com/rspec/rspec-core/issues).

## Contribute

See [http://github.com/rspec/rspec-dev](http://github.com/rspec/rspec-dev)

## Also see

* [http://github.com/rspec/rspec](http://github.com/rspec/rspec)
* [http://github.com/rspec/rspec-expectations](http://github.com/rspec/rspec-expectations)
* [http://github.com/rspec/rspec-mocks](http://github.com/rspec/rspec-mocks)

]]></readme>
        </gem>
      </box>
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems">
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/jeweler-1.5.1" name="jeweler" version="1.5.1" timestamp="1290893425000" parser_version="9" git="false">
          <additional_info authors="Josh Nichols" email="josh@technicalpickles.com" homepage="http://github.com/technicalpickles/jeweler">
            <summary>Opinionated tool for creating and managing RubyGem projects</summary>
          </additional_info>
          <dependency name="bundler" version="1.0.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="git" version="1.2.5" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rake" version="0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/bundler-1.0.7" name="bundler" version="1.0.7" timestamp="1290893425000" parser_version="9" git="false">
          <additional_info authors="Carl Lerche, Yehuda Katz, AndrÃ© Arko" email="carlhuda@engineyard.com" homepage="http://gembundler.com">
            <summary>The best way to manage your application's dependencies</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/builder-2.1.2" name="builder" version="2.1.2" timestamp="1290893840000" parser_version="9" git="false">
          <additional_info authors="Jim Weirich" email="jim@weirichhouse.org" homepage="http://onestepback.org">
            <summary>Builders for MarkUp.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/arel-2.0.4" name="arel" version="2.0.4" timestamp="1290893842000" parser_version="9" git="false">
          <additional_info authors="Aaron Patterson, Bryan Halmkamp, Emilio Tagua, Nick Kallen" email="aaron@tenderlovemaking.com, bryan@brynary.com, miloops@gmail.com, nick@example.org" homepage="http://github.com/rails/arel">
            <summary>Arel is a Relational Algebra for Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/sqlite3-0.1.1" name="sqlite3" version="0.1.1" timestamp="1290894583000" parser_version="9" git="false">
          <additional_info authors="Jakub KuÅºma" email="qoobaa@gmail.com" homepage="http://github.com/qoobaa/sqlite3">
            <summary>SQLite3 FFI bindings for Ruby 1.9</summary>
          </additional_info>
          <dependency name="ffi" version="0.6.3" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/ffi-0.6.3" name="ffi" version="0.6.3" timestamp="1290894583000" parser_version="9" git="false">
          <additional_info authors="Wayne Meissner" email="wmeissner@gmail.com" homepage="http://wiki.github.com/ffi/ffi">
            <summary>Ruby-FFI is a ruby extension for programmatically loading dynamic libraries, binding functions within them, and calling those functions from Ruby code</summary>
          </additional_info>
          <dependency name="rake" version="0.8.7" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/tzinfo-0.3.23" name="tzinfo" version="0.3.23" timestamp="1290893843000" parser_version="9" git="false">
          <additional_info authors="Philip Ross" email="phil.ross@gmail.com" homepage="http://tzinfo.rubyforge.org/">
            <summary>Daylight-savings aware timezone library</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/activesupport-3.0.3" name="activesupport" version="3.0.3" timestamp="1290893840000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>A toolkit of support libraries and Ruby core extensions extracted from the Rails framework.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/ar-audit-tracer-0.1.0" name="ar-audit-tracer" version="0.1.0" timestamp="1290895061000" parser_version="9" git="false">
          <additional_info authors="Martin Schweizer" email="contact@verticonaut.me" homepage="http://github.com/verticonaut/ar-audit-tracer">
            <summary>Track creator/modifiers of you AR Models similar to timestamps.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/git-1.2.5" name="git" version="1.2.5" timestamp="1290893424000" parser_version="9" git="false">
          <additional_info authors="Scott Chacon" email="schacon@gmail.com" homepage="http://github.com/schacon/ruby-git">
            <summary>Ruby/Git is a Ruby library that can be used to create, read and manipulate Git repositories by wrapping system calls to the git binary</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/activerecord-3.0.3" name="activerecord" version="3.0.3" timestamp="1290893845000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Object-relational mapper framework (part of Rails).</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="arel" version="2.0.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="tzinfo" version="0.3.23" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activemodel" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/i18n-0.4.2" name="i18n" version="0.4.2" timestamp="1290893841000" parser_version="9" git="false">
          <additional_info authors="Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon Moore" email="rails-i18n@googlegroups.com" homepage="http://github.com/svenfuchs/i18n">
            <summary>New wave Internationalization support for Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems/activemodel-3.0.3" name="activemodel" version="3.0.3" timestamp="1290893842000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>A toolkit for building modeling frameworks (part of Rails).</summary>
          </additional_info>
          <dependency name="builder" version="2.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="i18n" version="0.4" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
      </box>
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@global/bundler/gems" />
      <box url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems">
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/hirb-0.3.5" name="hirb" version="0.3.5" timestamp="1290720269000" parser_version="9" git="false">
          <additional_info authors="Gabriel Horner" email="gabriel.horner@gmail.com" homepage="http://tagaholic.me/hirb/">
            <summary>A mini view framework for console/irb that's easy to use, even while under its influence.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rspec-2.1.0" name="rspec" version="2.1.0" timestamp="1290720317000" parser_version="9" git="false">
          <additional_info authors="David Chelimsky, Chad Humphries" email="dchelimsky@gmail.com;chad.humphries@gmail.com" homepage="http://github.com/rspec/rspec">
            <summary>rspec-2.1.0</summary>
          </additional_info>
          <dependency name="rspec-core" version="2.1.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rspec-mocks" version="2.1.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rspec-expectations" version="2.1.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/columnize-0.3.2" name="columnize" version="0.3.2" timestamp="1290720237000" parser_version="9" git="false">
          <additional_info authors="R. Bernstein" email="rockyb@rubyforge.net" homepage="http://rubyforge.org/projects/rocky-hacks/columnize">
            <summary>Module to format an Array as an Array of String aligned in columns</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/activesupport-3.0.3" name="activesupport" version="3.0.3" timestamp="1290720194000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>A toolkit of support libraries and Ruby core extensions extracted from the Rails framework.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/activemodel-3.0.3" name="activemodel" version="3.0.3" timestamp="1290720195000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>A toolkit for building modeling frameworks (part of Rails).</summary>
          </additional_info>
          <dependency name="builder" version="2.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="i18n" version="0.4" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rack-mount-0.6.13" name="rack-mount" version="0.6.13" timestamp="1290720197000" parser_version="9" git="false">
          <additional_info authors="Joshua Peek" email="josh@joshpeek.com" homepage="http://github.com/josh/rack-mount">
            <summary>Stackable dynamic tree based Rack router</summary>
          </additional_info>
          <dependency name="rack" version="1.0.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/builder-2.1.2" name="builder" version="2.1.2" timestamp="1290720194000" parser_version="9" git="false">
          <additional_info authors="Jim Weirich" email="jim@weirichhouse.org" homepage="http://onestepback.org">
            <summary>Builders for MarkUp.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/actionpack-3.0.3" name="actionpack" version="3.0.3" timestamp="1290720199000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Web-flow and rendering framework putting the VC in MVC (part of Rails).</summary>
          </additional_info>
          <dependency name="builder" version="2.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="erubis" version="2.6.6" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rack-mount" version="0.6.13" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rack-test" version="0.5.6" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="tzinfo" version="0.3.23" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="i18n" version="0.4" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activemodel" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rack" version="1.2.1" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/configuration-1.2.0" name="configuration" version="1.2.0" timestamp="1290720237000" parser_version="9" git="false">
          <additional_info authors="Ara T. Howard" email="ara.t.howard@gmail.com" homepage="http://github.com/ahoward/configuration/tree/master">
            <summary>configuration</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/actionmailer-3.0.3" name="actionmailer" version="3.0.3" timestamp="1290720201000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Email composition, delivery, and receiving framework (part of Rails).</summary>
          </additional_info>
          <dependency name="actionpack" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="mail" version="2.2.9" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/growl-1.0.3" name="growl" version="1.0.3" timestamp="1290720268000" parser_version="9" git="false">
          <additional_info authors="TJ Holowaychuk" email="tj@vision-media.ca" homepage="http://github.com/visionmedia/growl">
            <summary>growlnotify bindings</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/factory_girl-1.3.2" name="factory_girl" version="1.3.2" timestamp="1290720266000" parser_version="9" git="false">
          <additional_info authors="Joe Ferris" email="jferris@thoughtbot.com" homepage="http://thoughtbot.com/projects/factory_girl">
            <summary>factory_girl provides a framework and DSL for defining and using model instance factories.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/archive-tar-minitar-0.5.2" name="archive-tar-minitar" version="0.5.2" timestamp="1290720202000" parser_version="9" git="false">
          <additional_info authors="Austin Ziegler, Mauricio Ferna'ndez" email="minitar@halostatue.ca" homepage="http://rubyforge.org/projects/ruwiki/">
            <summary>Provides POSIX tarchive management from Ruby programs.</summary>
          </additional_info>
          <readme xml:space="preserve"><![CDATA[Archive::Tar::Minitar README
============================
Archive::Tar::Minitar is a pure-Ruby library and command-line utility that
provides the ability to deal with POSIX tar(1) archive files. The
implementation is based heavily on Mauricio Ferna'ndez's implementation in
rpa-base, but has been reorganised to promote reuse in other projects.

This release is version 0.5.2, offering a Ruby 1.9 compatibility bugfix over
version 0.5.1. The library can only handle files and directories at this
point. A future version will be expanded to handle symbolic links and hard
links in a portable manner. The command line utility, minitar, can only create
archives, extract from archives, and list archive contents.

Using this library is easy. The simplest case is:

  require 'zlib'
  require 'archive/tar/minitar'
  include Archive::Tar

    # Packs everything that matches Find.find('tests')
  File.open('test.tar', 'wb') { |tar| Minitar.pack('tests', tar) }
    # Unpacks 'test.tar' to 'x', creating 'x' if necessary.
  Minitar.unpack('test.tar', 'x')

A gzipped tar can be written with:

    tgz = Zlib::GzipWriter.new(File.open('test.tgz', 'wb'))
      # Warning: tgz will be closed!
    Minitar.pack('tests', tgz)

    tgz = Zlib::GzipReader.new(File.open('test.tgz', 'rb'))
      # Warning: tgz will be closed!
    Minitar.unpack(tgz, 'x')

As the case above shows, one need not write to a file. However, it will
sometimes require that one dive a little deeper into the API, as in the case
of StringIO objects. Note that I'm not providing a block with Minitar::Output,
as Minitar::Output#close automatically closes both the Output object and the
wrapped data stream object.

  begin
    sgz = Zlib::GzipWriter.new(StringIO.new(""))
    tar = Output.new(sgz)
    Find.find('tests') do |entry|
      Minitar.pack_file(entry, tar)
    end
  ensure
      # Closes both tar and sgz.
    tar.close
  end

Copyright
=========
# Copyright 2004 Mauricio Julio Ferna'ndez Pradier and Austin Ziegler
#
# This program is based on and incorporates parts of RPA::Package from
# rpa-base (lib/rpa/package.rb and lib/rpa/util.rb) by Mauricio and has been
# adapted to be more generic by Austin.
#
# 'minitar' contains an adaptation of Ruby/ProgressBar by Satoru
# Takabayashi <satoru@namazu.org>, copyright 2001 - 2004.
#
# This program is free software. It may be redistributed and/or modified
# under the terms of the GPL version 2 (or later) or Ruby's licence.
# 
# $Id: README 213 2008-02-26 22:32:11Z austin $
]]></readme>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/childprocess-0.1.4" name="childprocess" version="0.1.4" timestamp="1290720234000" parser_version="9" git="false">
          <additional_info authors="Jari Bakken" email="jari.bakken@gmail.com" homepage="http://github.com/jarib/childprocess">
            <summary>Cross-platform ruby library for managing child processes.</summary>
          </additional_info>
          <dependency name="ffi" version="0.6.3" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/railties-3.0.3" name="railties" version="3.0.3" timestamp="1290720267000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Tools for creating, working with, and running Rails applications.</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rake" version="0.8.7" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="thor" version="0.14.4" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="actionpack" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/cucumber-rails-0.3.2" name="cucumber-rails" version="0.3.2" timestamp="1290720264000" parser_version="9" git="false">
          <additional_info authors="Dennis BlÃ¶te, Aslak HellesÃ¸y, Rob Holland" email="cukes@googlegroups.com" homepage="http://github.com/aslakhellesoy/cucumber-rails">
            <summary>Cucumber Generators and Runtime for Rails</summary>
          </additional_info>
          <dependency name="cucumber" version="0.8.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rspec-mocks-2.1.0" name="rspec-mocks" version="2.1.0" timestamp="1290720316000" parser_version="9" git="false">
          <additional_info authors="David Chelimsky, Chad Humphries" email="dchelimsky@gmail.com;chad.humphries@gmail.com" homepage="http://github.com/rspec/rspec-mocks">
            <summary>rspec-mocks-2.1.0</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/abstract-1.0.0" name="abstract" version="1.0.0" timestamp="1290720193000" parser_version="9" git="false">
          <additional_info authors="makoto kuwata" email="N/A" homepage="http://rubyforge.org/projects/abstract">
            <summary>a library which enable you to define abstract method in Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/xpath-0.1.2" name="xpath" version="0.1.2" timestamp="1290720236000" parser_version="9" git="false">
          <additional_info authors="Jonas Nicklas" email="jonas.nicklas@gmail.com" homepage="http://github.com/jnicklas/xpath">
            <summary>Generate XPath expressions from Ruby</summary>
          </additional_info>
          <dependency name="nokogiri" version="1.3" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/ZenTest-4.4.0" name="ZenTest" version="4.4.0" timestamp="1290720193000" parser_version="9" git="false">
          <additional_info authors="Ryan Davis, Eric Hodel" email="ryand-ruby@zenspider.com, drbrain@segment7.net" homepage="http://www.zenspider.com/ZSS/Products/ZenTest/">
            <summary>ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/erubis-2.6.6" name="erubis" version="2.6.6" timestamp="1290720196000" parser_version="9" git="false">
          <additional_info authors="makoto kuwata" email="kwa(at)kuwata-lab.com" homepage="http://www.kuwata-lab.com/erubis/">
            <summary>a fast and extensible eRuby implementation which supports multi-language</summary>
          </additional_info>
          <dependency name="abstract" version="1.0.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/cancan-1.4.1" name="cancan" version="1.4.1" timestamp="1290720207000" parser_version="9" git="false">
          <additional_info authors="Ryan Bates" email="ryan@railscasts.com" homepage="http://github.com/ryanb/cancan">
            <summary>Simple authorization solution for Rails.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/arel-2.0.4" name="arel" version="2.0.4" timestamp="1290720201000" parser_version="9" git="false">
          <additional_info authors="Aaron Patterson, Bryan Halmkamp, Emilio Tagua, Nick Kallen" email="aaron@tenderlovemaking.com, bryan@brynary.com, miloops@gmail.com, nick@example.org" homepage="http://github.com/rails/arel">
            <summary>Arel is a Relational Algebra for Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/ruby_core_source-0.1.4" name="ruby_core_source" version="0.1.4" timestamp="1290720269000" parser_version="9" git="false">
          <additional_info authors="Mark Moseley" email="mark@fast-software.com" homepage="http://github.com/mark-moseley/ruby_core_source">
            <summary>Retrieve Ruby core source files</summary>
          </additional_info>
          <dependency name="archive-tar-minitar" version="0.5.2" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/thor-0.14.6" name="thor" version="0.14.6" timestamp="1290720266000" parser_version="9" git="false">
          <additional_info authors="Yehuda Katz, JosÃ© Valim" email="ruby-thor@googlegroups.com" homepage="http://github.com/wycats/thor">
            <summary>A scripting framework that replaces rake, sake and rubigen</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/database_cleaner-0.6.0" name="database_cleaner" version="0.6.0" timestamp="1290720265000" parser_version="9" git="false">
          <additional_info authors="Ben Mabey" email="ben@benmabey.com" homepage="http://github.com/bmabey/database_cleaner">
            <summary>Strategies for cleaning databases. Can be used to ensure a clean state for testing.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/factory_girl_rails-1.0" name="factory_girl_rails" version="1.0" timestamp="1290720268000" parser_version="9" git="false">
          <additional_info authors="Joe Ferris" email="jferris@thoughtbot.com" homepage="http://thoughtbot.com/projects/factory_girl_rails">
            <summary>factory_girl_rails provides integration between factory_girl and rails 3</summary>
          </additional_info>
          <dependency name="factory_girl" version="1.3" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="rails" version="3.0.0.beta4" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/culerity-0.2.12" name="culerity" version="0.2.12" timestamp="1290720212000" parser_version="9" git="false">
          <additional_info authors="Alexander Lang" email="alex@upstream-berlin.com" homepage="http://github.com/langalex/culerity">
            <summary>Culerity integrates Cucumber and Celerity in order to test your application's full stack.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/polyglot-0.3.1" name="polyglot" version="0.3.1" timestamp="1290720200000" parser_version="9" git="false">
          <additional_info authors="Clifford Heath" email="cjheath@rubyforge.org" homepage="http://polyglot.rubyforge.org">
            <summary>Allows custom language loaders for specified file extensions to be hooked into require</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/mail-2.2.10" name="mail" version="2.2.10" timestamp="1290720201000" parser_version="9" git="false">
          <additional_info authors="Mikel Lindsaar" email="raasdnil@gmail.com" homepage="http://github.com/mikel/mail">
            <summary>Mail provides a nice Ruby DSL for making, sending and reading emails.</summary>
          </additional_info>
          <dependency name="treetop" version="1.4.8" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="mime-types" version="1.16" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activesupport" version="2.3.6" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="i18n" version="0.4.1" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rails-3.0.3" name="rails" version="3.0.3" timestamp="1290720267000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Full-stack web application framework.</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="activerecord" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="bundler" version="1.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="railties" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="activeresource" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="actionpack" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="actionmailer" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/bcrypt-ruby-2.1.2" name="bcrypt-ruby" version="2.1.2" timestamp="1290720206000" parser_version="9" git="false">
          <additional_info authors="Coda Hale" email="coda.hale@gmail.com" homepage="http://bcrypt-ruby.rubyforge.org">
            <summary>OpenBSD's bcrypt() password hashing algorithm.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rails3-generators-0.14.0" name="rails3-generators" version="0.14.0" timestamp="1290720315000" parser_version="9" git="false">
          <additional_info authors="Jose Valim, Anuj Dutta, Paul Berry, Jeff Tucker, Louis T., Jai-Gouk Kim, Darcy Laycock, Peter Haza, Peter Gumeson, Kristian Mandrup, Alejandro Juarez" email="andre@arko.net" homepage="http://github.com/indirect/rails3-generators">
            <summary>Rails 3 compatible generators</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/cucumber-0.9.4" name="cucumber" version="0.9.4" timestamp="1290720264000" parser_version="9" git="false">
          <additional_info authors="Aslak HellesÃ¸y" email="cukes@googlegroups.com" homepage="http://cukes.info">
            <summary>cucumber-0.9.4</summary>
          </additional_info>
          <dependency name="builder" version="2.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="diff-lcs" version="1.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="term-ansicolor" version="1.0.5" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="json" version="1.4.6" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="gherkin" version="2.2.9" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/nokogiri-1.4.4" name="nokogiri" version="1.4.4" timestamp="1290720219000" parser_version="9" git="false">
          <additional_info authors="Aaron Patterson, Mike Dalessio" email="aaronp@rubyforge.org, mike.dalessio@gmail.com" homepage="http://nokogiri.org">
            <summary>Nokogiri (é¸) is an HTML, XML, SAX, and Reader parser</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/treetop-1.4.9" name="treetop" version="1.4.9" timestamp="1290720200000" parser_version="9" git="false">
          <additional_info authors="Nathan Sobo" email="nathansobo@gmail.com" homepage="http://functionalform.blogspot.com">
            <summary>A Ruby-based text parsing and interpretation DSL</summary>
          </additional_info>
          <dependency name="polyglot" version="0.3.1" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/warden-0.10.7" name="warden" version="0.10.7" timestamp="1290720265000" parser_version="9" git="false">
          <additional_info authors="Daniel Neighman" email="has.sox@gmail.com" homepage="http://github.com/hassox/warden">
            <summary>Rack middleware that provides authentication for rack applications</summary>
          </additional_info>
          <dependency name="rack" version="1.0.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/autotest-growl-0.2.6" name="autotest-growl" version="0.2.6" timestamp="1290720205000" parser_version="9" git="false">
          <additional_info authors="Sven Schwyn" email="ruby@bitcetera.com" homepage="http://www.bitcetera.com/products/autotest-growl">
            <summary>Growl notification support for autotest.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/ruby-debug-base19-0.11.24" name="ruby-debug-base19" version="0.11.24" timestamp="1290720319000" parser_version="9" git="false">
          <additional_info authors="Kent Sibilev, Mark Moseley" email="mark@fast-software.com" homepage="http://rubyforge.org/projects/ruby-debug19/">
            <summary>Fast Ruby debugger - core component</summary>
          </additional_info>
          <dependency name="ruby_core_source" version="0.1.4" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="columnize" version="0.3.1" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="linecache19" version="0.5.11" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/haml-3.0.24" name="haml" version="3.0.24" timestamp="1290720269000" parser_version="9" git="false">
          <additional_info authors="Nathan Weizenbaum, Chris Eppstein, Hampton Catlin" email="haml@googlegroups.com" homepage="http://haml-lang.com/">
            <summary>An elegant, structured XHTML/XML templating engine. Comes with Sass, a similar CSS templating engine.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rack-test-0.5.6" name="rack-test" version="0.5.6" timestamp="1290720197000" parser_version="9" git="false">
          <additional_info authors="Bryan Helmkamp" email="bryan@brynary.com" homepage="http://github.com/brynary/rack-test">
            <summary>Simple testing API built on Rack</summary>
          </additional_info>
          <dependency name="rack" version="1.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/term-ansicolor-1.0.5" name="term-ansicolor" version="1.0.5" timestamp="1290720240000" parser_version="9" git="false">
          <additional_info authors="Florian Frank" email="flori@ping.de" homepage="http://flori.github.com/term-ansicolor">
            <summary>Ruby library that colors strings using ANSI escape sequences</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/selenium-webdriver-0.1.0" name="selenium-webdriver" version="0.1.0" timestamp="1290720236000" parser_version="9" git="false">
          <additional_info authors="Jari Bakken" email="jari.bakken@gmail.com" homepage="http://selenium.googlecode.com">
            <summary>The next generation developer focused tool for automated testing of webapps</summary>
          </additional_info>
          <dependency name="rubyzip" version="0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="json_pure" version="0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="childprocess" version="0.1.4" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="ffi" version="0.6.3" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/sys-uname-0.8.4" name="sys-uname" version="0.8.4" timestamp="1290720203000" parser_version="9" git="false">
          <additional_info authors="Daniel J. Berger" email="djberg96@gmail.com" homepage="http://www.rubyforge.org/projects/sysutils">
            <summary>An interface for returning system platform information</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/celerity-0.8.4" name="celerity" version="0.8.4" timestamp="1290720211000" parser_version="9" git="false">
          <additional_info authors="Jari Bakken, T. Alexander Lystad, Knut Johannes Dahle" email="jari.bakken@gmail.com" homepage="http://github.com/jarib/celerity">
            <summary>Celerity is a JRuby library for easy and fast functional test automation for web applications.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rspec-rails-2.1.0" name="rspec-rails" version="2.1.0" timestamp="1290720317000" parser_version="9" git="false">
          <additional_info authors="David Chelimsky, Chad Humphries" email="dchelimsky@gmail.com;chad.humphries@gmail.com" homepage="http://github.com/rspec/rspec-rails">
            <summary>rspec-rails-2.1.0</summary>
          </additional_info>
          <dependency name="rspec" version="2.1.0" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/linecache19-0.5.11" name="linecache19" version="0.5.11" timestamp="1290720314000" parser_version="9" git="false">
          <additional_info authors="R. Bernstein, Mark Moseley" email="mark@fast-software.com" homepage="http://rubyforge.org/projects/ruby-debug19">
            <summary>Read file with caching</summary>
          </additional_info>
          <dependency name="ruby_core_source" version="0.1.4" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/capybara-0.4.0" name="capybara" version="0.4.0" timestamp="1290720237000" parser_version="9" git="false">
          <additional_info authors="Jonas Nicklas" email="jonas.nicklas@gmail.com" homepage="http://github.com/jnicklas/capybara">
            <summary>Capybara aims to simplify the process of integration testing Rack applications, such as Rails, Sinatra or Merb</summary>
          </additional_info>
          <dependency name="culerity" version="0.2.4" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rack-test" version="0.5.4" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="rack" version="1.0.0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="mime-types" version="1.16" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="celerity" version="0.7.9" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="selenium-webdriver" version="0.0.27" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="nokogiri" version="1.3.3" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="xpath" version="0.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/activerecord-3.0.3" name="activerecord" version="3.0.3" timestamp="1290720202000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>Object-relational mapper framework (part of Rails).</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="arel" version="2.0.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="tzinfo" version="0.3.23" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="activemodel" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rspec-expectations-2.1.0" name="rspec-expectations" version="2.1.0" timestamp="1290720316000" parser_version="9" git="false">
          <additional_info authors="David Chelimsky, Chad Humphries" email="dchelimsky@gmail.com;chad.humphries@gmail.com" homepage="http://github.com/rspec/rspec-expectations">
            <summary>rspec-expectations-2.1.0</summary>
          </additional_info>
          <dependency name="diff-lcs" version="1.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rake-0.8.7" name="rake" version="0.8.7" timestamp="1290720322000" parser_version="9" git="false">
          <additional_info authors="Jim Weirich" email="jim@weirichhouse.org" homepage="http://rake.rubyforge.org">
            <summary>Ruby based make-like utility.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/tzinfo-0.3.23" name="tzinfo" version="0.3.23" timestamp="1290720199000" parser_version="9" git="false">
          <additional_info authors="Philip Ross" email="phil.ross@gmail.com" homepage="http://tzinfo.rubyforge.org/">
            <summary>Daylight-savings aware timezone library</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/ffi-0.6.3" name="ffi" version="0.6.3" timestamp="1290720234000" parser_version="9" git="false">
          <additional_info authors="Wayne Meissner" email="wmeissner@gmail.com" homepage="http://wiki.github.com/ffi/ffi">
            <summary>Ruby-FFI is a ruby extension for programmatically loading dynamic libraries, binding functions within them, and calling those functions from Ruby code</summary>
          </additional_info>
          <dependency name="rake" version="0.8.7" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/devise-1.1.3" name="devise" version="1.1.3" timestamp="1290720265000" parser_version="9" git="false">
          <additional_info authors="JosÃ© Valim, Carlos AntÃ´nio" email="contact@plataformatec.com.br" homepage="http://github.com/plataformatec/devise">
            <summary>Flexible authentication solution for Rails with Warden</summary>
          </additional_info>
          <dependency name="warden" version="0.10.7" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="bcrypt-ruby" version="2.1.2" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/json-1.4.6" name="json" version="1.4.6" timestamp="1290720240000" parser_version="9" git="false">
          <additional_info authors="Florian Frank" email="flori@ping.de" homepage="http://flori.github.com/json">
            <summary>JSON Implementation for Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/gherkin-2.2.9" name="gherkin" version="2.2.9" timestamp="1290720263000" parser_version="9" git="false">
          <additional_info authors="Mike Sassak, Gregory Hnatiuk, Aslak HellesÃ¸y" email="cukes@googlegroups.com" homepage="http://github.com/aslakhellesoy/gherkin">
            <summary>gherkin-2.2.9</summary>
          </additional_info>
          <dependency name="term-ansicolor" version="1.0.5" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
          <dependency name="json" version="1.4.6" bound="LATEST_IN_BRANCH" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rubyzip-0.9.4" name="rubyzip" version="0.9.4" timestamp="1290720235000" parser_version="9" git="false">
          <additional_info authors="Thomas Sondergaard" email="thomas(at)sondergaard.cc" homepage="http://rubyzip.sourceforge.net/">
            <summary>rubyzip is a ruby module for reading and writing zip files</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/mime-types-1.16" name="mime-types" version="1.16" timestamp="1290720200000" parser_version="9" git="false">
          <additional_info authors="Austin Ziegler" email="austin@rubyforge.org" homepage="http://mime-types.rubyforge.org/">
            <summary>Manages a MIME Content-Type database that will return the Content-Type for a given filename.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/launchy-0.3.7" name="launchy" version="0.3.7" timestamp="1290720269000" parser_version="9" git="false">
          <additional_info authors="Jeremy Hinegardner" email="jeremy@copiousfreetime.org" homepage="http://copiousfreetime.rubyforge.org/launchy/">
            <summary>Launchy is helper class for launching cross-platform applications in a fire and forget manner</summary>
          </additional_info>
          <dependency name="rake" version="0.8.1" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="configuration" version="0.0.5" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/i18n-0.4.2" name="i18n" version="0.4.2" timestamp="1290720194000" parser_version="9" git="false">
          <additional_info authors="Sven Fuchs, Joshua Harvey, Matt Aimonetti, Stephan Soller, Saimon Moore" email="rails-i18n@googlegroups.com" homepage="http://github.com/svenfuchs/i18n">
            <summary>New wave Internationalization support for Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/diff-lcs-1.1.2" name="diff-lcs" version="1.1.2" timestamp="1290720237000" parser_version="9" git="false">
          <additional_info authors="N/A" email="diff-lcs@halostatue.ca" homepage="http://rubyforge.org/projects/ruwiki/">
            <summary>Provides a list of changes that represent the difference between two sequenced collections.</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/sqlite3-ruby-1.3.2" name="sqlite3-ruby" version="1.3.2" timestamp="1290720326000" parser_version="9" git="false">
          <additional_info authors="Jamis Buck, Luis Lavena, Aaron Patterson" email="jamis@37signals.com, luislavena@gmail.com, aaron@tenderlovemaking.com" homepage="http://github.com/luislavena/sqlite3-ruby">
            <summary>This module allows Ruby programs to interface with the SQLite3 database engine (http://www.sqlite.org)</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/spork-0.8.4" name="spork" version="0.8.4" timestamp="1290720323000" parser_version="9" git="false">
          <additional_info authors="Tim Harper, Donald Parish" email="timcharper+spork@gmail.com" homepage="http://github.com/timcharper/spork">
            <summary>spork</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/activeresource-3.0.3" name="activeresource" version="3.0.3" timestamp="1290720202000" parser_version="9" git="false">
          <additional_info authors="David Heinemeier Hansson" email="david@loudthinking.com" homepage="http://www.rubyonrails.org">
            <summary>REST modeling framework (part of Rails).</summary>
          </additional_info>
          <dependency name="activesupport" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="activemodel" version="3.0.3" bound="EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/json_pure-1.4.6" name="json_pure" version="1.4.6" timestamp="1290720235000" parser_version="9" git="false">
          <additional_info authors="Florian Frank" email="flori@ping.de" homepage="http://flori.github.com/json">
            <summary>JSON Implementation for Ruby</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/autotest-fsevent-0.2.3" name="autotest-fsevent" version="0.2.3" timestamp="1290720205000" parser_version="9" git="false">
          <additional_info authors="Sven Schwyn" email="ruby@bitcetera.com" homepage="http://www.bitcetera.com/products/autotest-fsevent">
            <summary>Use FSEvent (on Mac OS X 10.5 or higher) instead of filesystem polling.</summary>
          </additional_info>
          <dependency name="sys-uname" version="0" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rspec-core-2.1.0" name="rspec-core" version="2.1.0" timestamp="1290720316000" parser_version="9" git="false">
          <additional_info authors="Chad Humphries, David Chelimsky" email="dchelimsky@gmail.com;chad.humphries@gmail.com" homepage="http://github.com/rspec/rspec-core">
            <summary>rspec-core-2.1.0</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/bundler-1.0.7" name="bundler" version="1.0.7" timestamp="1290719727000" parser_version="9" git="false">
          <additional_info authors="Carl Lerche, Yehuda Katz, AndrÃ© Arko" email="carlhuda@engineyard.com" homepage="http://gembundler.com">
            <summary>The best way to manage your application's dependencies</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/rack-1.2.1" name="rack" version="1.2.1" timestamp="1290720196000" parser_version="9" git="false">
          <additional_info authors="Christian Neukirchen" email="chneukirchen@gmail.com" homepage="http://rack.rubyforge.org">
            <summary>a modular Ruby webserver interface</summary>
          </additional_info>
        </gem>
        <gem url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems/ruby-debug19-0.11.6" name="ruby-debug19" version="0.11.6" timestamp="1290720320000" parser_version="9" git="false">
          <additional_info authors="Kent Sibilev, Mark Moseley" email="mark@fast-software.com" homepage="http://rubyforge.org/projects/ruby-debug19/">
            <summary>Command line interface (CLI) for ruby-debug-base</summary>
          </additional_info>
          <dependency name="columnize" version="0.3.1" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="ruby-debug-base19" version="0.11.19" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
          <dependency name="linecache19" version="0.5.11" bound="GREATER_OR_EQUAL" git="false" path="false" doRequire="true" />
        </gem>
      </box>
    </myPrecious>
    <sdk2gems>
      <sdk2gem sdk="Ruby SDK 1.9.2-p0">
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0/bundler/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@global/gems" />
      </sdk2gem>
      <sdk2gem sdk="Ruby SDK 1.9.2-p0 [global]">
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@global/bundler/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@global/gems" />
      </sdk2gem>
      <sdk2gem sdk="Ruby SDK 1.9.2-p0 [rails3]">
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/bundler/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rails3/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@global/gems" />
      </sdk2gem>
      <sdk2gem sdk="Ruby SDK 1.9.2-p0 [rockit]">
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/bundler/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@rockit/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@global/gems" />
      </sdk2gem>
      <sdk2gem sdk="Ruby SDK 1.9.2-p0 [ar-audit-tracer]">
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/bundler/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@ar-audit-tracer/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@global/gems" />
      </sdk2gem>
      <sdk2gem sdk="Ruby SDK 1.9.2-p0 [glossy]">
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/bundler/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@glossy/gems" />
        <gemBox url="file://$USER_HOME$/.rvm/gems/ruby-1.9.2-p0@global/gems" />
      </sdk2gem>
    </sdk2gems>
  </component>
  <component name="RemoteGemsState" version="0">
    <entry url="http://gems.rubyonrails.org/" />
    <entry url="http://gems.github.com" />
  </component>
</application>

